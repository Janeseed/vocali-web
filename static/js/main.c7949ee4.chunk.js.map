{"version":3,"sources":["vocali_logo2.svg","SimpleHeader.js","Start.js","api/api.js","InfoSet.js","SongPref.js","PitchDetect.js","InfoHeader.js","Home.js","Footer.js","Result.js","List.js","App.js","index.js"],"names":["withRouter","input","back","className","href","src","Logo","alt","LeftOutlined","Paragraph","Typography","Start","path","this","props","history","push","onClick","nextPath","type","React","Component","auth","axios","create","baseURL","headers","getUser","id","get","createUser","name","age","post","modifyUser","data","put","selectSong","userId","songs","category","postList","map","song","JSON","stringify","console","log","InfoSet","state","modal","handleNameChange","e","setState","target","value","handleAgeChange","handleModalChange","setInfo","isNaN","vocaliAPI","then","response","cookies","Cookies","set","remove","size","placeholder","prefix","UserOutlined","onChange","title","visible","onOk","footer","CheckableTag","Tag","SongPref","selectedSongs","tag","checked","nextSelectedTags","filter","t","songlist","extra","indexOf","handleSongPref","HeartOutlined","songNum","artist","onNextClick","Pitch","record","disabled","currentPitch","minPitch","maxPitch","handleRecordChange","stopPitch","getPitch","bool2str","bool","bind","logPitch","voice","Wad","source","tuner","Poly","setVolume","add","play","updatePitch","pitch","noteName","animation","requestAnimationFrame","stopUpdatingPitch","cancelAnimationFrame","stop","userid","Header","Layout","people","mood","useState","selectedPeople","setPeople","selectedMood","setMood","userName","setName","userAge","setAge","userPitch","setPitch","useEffect","res","style","lineHeight","backgroundColor","slice","Content","tagsData","tagsData2","Home","nextPeople","nextMood","handlePeopleChange","handleMoodChange","Footer","CoffeeOutlined","HomeOutlined","Meta","Card","Result","userActions","displayName","icon","FrownOutlined","QuestionOutlined","songList","year","genre","currSongIndex","feedbacks","Map","loading","adjustModal","explainModal","selectedFeedback","moodWeight","pitchWeight","prefWeight","handleExplainModalChange","handleAdjustModalChange","parseFloat","onChangeMood","onChangePitch","onChangeSongPref","songPrefWeight","moods","per","toLowerCase","result","loadSongFromModel","values","queryString","parse","location","search","toString","currSong","padding","actions","userAction","handleSelectedFeedback","width","margin","active","description","onCancel","Group","defaultValue","buttonStyle","Button","color","moodScore","toFixed","prefScore","LikeList","drawer","songid","forEach","handleDelete","avatar","height","App","basename","exact","component","ReactDOM","render","process","document","getElementById"],"mappings":"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","file":"static/js/main.c7949ee4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/vocali_logo2.81bd03c9.svg\";","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\n\r\nimport Logo from \"./vocali_logo2.svg\";\r\nimport \"./css/header.css\";\r\n\r\nconst SimpleHeader = (input) => {\r\n  if (input.back === \"none\") {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <a href=\"/\">\r\n          <img className=\"logo\" src={Logo} alt=\"Vocali Logo\" />\r\n        </a>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <a href={input.back}>\r\n          <LeftOutlined className=\"return-button\" />\r\n        </a>\r\n        <a href=\"/\">\r\n          <img className=\"logo\" src={Logo} alt=\"Vocali Logo\" />\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withRouter(SimpleHeader);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button, Typography } from \"antd\";\r\n\r\nimport \"./css/common.css\";\r\nimport SimpleHeader from \"./SimpleHeader\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Start extends React.Component {\r\n  nextPath(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SimpleHeader back=\"none\" />\r\n        <div className=\"row-flex-container\">\r\n          <Paragraph className=\"slogan\">\r\n            Vocali will find you a{\" \"}\r\n            <span className=\"highlight\">perfect song to sing at Noraebang</span>\r\n          </Paragraph>\r\n          <Button\r\n            className=\"start-button circle\"\r\n            onClick={() => this.nextPath(\"/info\")}\r\n            type=\"primary\"\r\n          >\r\n            START\r\n          </Button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Start);\r\n","import axios from \"axios\";\r\n\r\nconst auth = axios.create({\r\n  baseURL: \"https://lit-eyrie-97447.herokuapp.com\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport const getUser = (id) => auth.get(`/users/${id}`);\r\n\r\nexport const createUser = (name, age) =>\r\n  auth.post(`/users`, {\r\n    name: name,\r\n    age: age * 1,\r\n  });\r\n\r\nexport const modifyUser = (id, data) => {\r\n  return auth.put(`/users/${id}`, data);\r\n};\r\n\r\nexport const selectSong = (userId, songs, category) => {\r\n  let postList = [];\r\n  songs.map((song) =>\r\n    postList.push({\r\n      id: song.id,\r\n      category: category,\r\n    })\r\n  );\r\n\r\n  const data = JSON.stringify(postList);\r\n  const config = {\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n  console.log(data);\r\n  return auth.post(`/users/${userId}/songs/select`, data, config);\r\n};\r\n\r\nexport const getEvaluation = (userId) => auth.get(`/users/${userId}/songs/select`);\r\n\r\nexport const getRecommendation = (userId, moods, per) =>\r\n  auth.get(`/users/${userId}/recommendations?moods=${moods}&per=${per}`);\r\n","import React from \"react\";\r\nimport { Button, Typography, Input, Modal } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./css/common.css\";\r\n\r\nimport * as vocaliAPI from \"./api/api.js\";\r\nimport Cookies from \"universal-cookie\";\r\nimport SimpleHeader from \"./SimpleHeader\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass InfoSet extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    age: \"\",\r\n    modal: false,\r\n  };\r\n  handleNameChange = (e) => {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  };\r\n  handleAgeChange = (e) => {\r\n    this.setState({\r\n      age: e.target.value,\r\n    });\r\n  };\r\n  handleModalChange = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  };\r\n\r\n  setInfo = () => {\r\n    const name = this.state.name;\r\n    const age = this.state.age;\r\n    if (name === \"\" || age === \"\" || isNaN(age)) {\r\n      this.handleModalChange();\r\n      return;\r\n    }\r\n    vocaliAPI.createUser(name, age).then((response) => {\r\n      const userId = response.data.id;\r\n      const cookies = new Cookies();\r\n      cookies.set(\"id\", userId, { path: \"/\" });\r\n      cookies.remove(\"mood\", { path: \"/\" });\r\n      cookies.remove(\"people\", { path: \"/\" });\r\n      this.props.history.push(\"/pitch\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SimpleHeader back=\"none\" />\r\n        <Paragraph className=\"description\">\r\n          First,<br></br> Put your brief information\r\n        </Paragraph>\r\n        <div className=\"inputs\">\r\n          <div className=\"input-div\">\r\n            <div className=\"subtitle\">Name</div>\r\n            <Input\r\n              className=\"name-input\"\r\n              size=\"large\"\r\n              placeholder=\"ex. Gildong\"\r\n              prefix={<UserOutlined />}\r\n              onChange={this.handleNameChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-div\">\r\n            <div className=\"subtitle\">Age</div>\r\n            <Input\r\n              className=\"age-input\"\r\n              size=\"large\"\r\n              placeholder=\"ex. 27\"\r\n              onChange={this.handleAgeChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Button className=\"next-button\" onClick={this.setInfo} type=\"primary\">\r\n          NEXT\r\n        </Button>\r\n\r\n        <Modal\r\n          title=\"Warning\"\r\n          visible={this.state.modal}\r\n          onOk={this.handleModalChange}\r\n          footer={[\r\n            <Button key=\"ok\" type=\"primary\" onClick={this.handleModalChange}>\r\n              OK\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <p>You should fill out your name and age. Also your age should be valid number :)</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(InfoSet);\r\n","import React from \"react\";\r\nimport { Button, Typography, Card, Tag } from \"antd\";\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport * as vocaliAPI from \"./api/api.js\";\r\nimport Cookies from \"universal-cookie\";\r\nimport \"./css/common.css\";\r\nimport songlist from \"./static/songPref.json\";\r\nimport SimpleHeader from \"./SimpleHeader\";\r\n\r\nconst { Paragraph } = Typography;\r\nconst { CheckableTag } = Tag;\r\n\r\nclass SongPref extends React.Component {\r\n  state = {\r\n    selectedSongs: [],\r\n  };\r\n\r\n  handleSongPref(tag, checked) {\r\n    const { selectedSongs } = this.state;\r\n    const nextSelectedTags = checked\r\n      ? [...selectedSongs, tag]\r\n      : selectedSongs.filter((t) => t !== tag);\r\n    console.log(\"You are interested in: \", nextSelectedTags);\r\n    this.setState({ selectedSongs: nextSelectedTags });\r\n  }\r\n\r\n  onNextClick(selectedSongs) {\r\n    console.log(selectedSongs);\r\n    const cookies = new Cookies();\r\n    const userId = cookies.get(\"id\", { path: \"/\" });\r\n    vocaliAPI.selectSong(userId, selectedSongs, \"like\");\r\n    this.props.history.push(\"/home\");\r\n  }\r\n\r\n  render() {\r\n    const { selectedSongs } = this.state;\r\n    return (\r\n      <div>\r\n        <SimpleHeader back=\"/pitch\" />\r\n        <Paragraph className=\"description\">\r\n          Next,<br></br>Check all the songs you would sing at Noraebang!\r\n        </Paragraph>\r\n        <div className=\"song-pref-div\">\r\n          {songlist.map((song) => (\r\n            <Card\r\n              size=\"small\"\r\n              className=\"song-pref-card\"\r\n              title={song.title}\r\n              extra={\r\n                <CheckableTag\r\n                  key={song.songNum}\r\n                  checked={selectedSongs.indexOf(song) > -1}\r\n                  onChange={(checked) => this.handleSongPref(song, checked)}\r\n                >\r\n                  <HeartOutlined />\r\n                </CheckableTag>\r\n              }\r\n            >\r\n              <p>{song.artist}</p>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n        <Button\r\n          className=\"next-button\"\r\n          onClick={() => this.onNextClick(this.state.selectedSongs)}\r\n          type=\"primary\"\r\n        >\r\n          NEXT\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SongPref);\r\n","import React from \"react\";\r\nimport Wad from \"web-audio-daw\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button, Typography, Divider } from \"antd\";\r\n\r\nimport SimpleHeader from \"./SimpleHeader\";\r\nimport * as vocaliAPI from \"./api/api.js\";\r\nimport Cookies from \"universal-cookie\";\r\nimport \"./css/pitch.css\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Pitch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getPitch = this.getPitch.bind(this);\r\n    this.logPitch = this.logPitch.bind(this);\r\n    this.stopPitch = this.stopPitch.bind(this);\r\n    this.handleRecordChange = this.handleRecordChange.bind(this);\r\n    this.onNextClick = this.onNextClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.voice = new Wad({ source: \"mic\" });\r\n    this.tuner = new Wad.Poly();\r\n  }\r\n\r\n  state = {\r\n    record: false,\r\n    disabled: true,\r\n    currentPitch: \"None\",\r\n    minPitch: [10000, \"None\"],\r\n    maxPitch: [0, \"None\"],\r\n  };\r\n  handleRecordChange = () => {\r\n    this.setState({\r\n      record: !this.state.record,\r\n    });\r\n    if (!this.state.record) {\r\n      this.getPitch();\r\n    } else {\r\n      this.stopPitch();\r\n    }\r\n  };\r\n  bool2str = (bool) => {\r\n    if (bool) return \"Stop\";\r\n    else return \"Record\";\r\n  };\r\n\r\n  nextPath(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  getPitch() {\r\n    this.tuner.setVolume(0);\r\n    this.tuner.add(this.voice);\r\n    this.voice.play();\r\n    this.tuner.updatePitch();\r\n    this.logPitch();\r\n  }\r\n\r\n  logPitch() {\r\n    console.log(this.tuner.pitch, this.tuner.noteName);\r\n    if (this.tuner.noteName) {\r\n      console.log(this.state.minPitch[0]);\r\n      if (this.state.disabled) {\r\n        this.setState({ disabled: false });\r\n      }\r\n      if (this.tuner.pitch > this.state.maxPitch[0]) {\r\n        this.maxPitch = this.tuner.pitch;\r\n        this.setState({\r\n          maxPitch: [this.tuner.pitch, this.tuner.noteName],\r\n        });\r\n      }\r\n      if (this.tuner.pitch < this.state.minPitch[0]) {\r\n        this.minPitch = this.tuner.pitch;\r\n        this.setState({\r\n          minPitch: [this.tuner.pitch, this.tuner.noteName],\r\n        });\r\n      }\r\n      this.setState({\r\n        currentPitch: this.tuner.noteName,\r\n      });\r\n    }\r\n    this.animation = requestAnimationFrame(this.logPitch);\r\n  }\r\n\r\n  stopPitch() {\r\n    this.tuner.stopUpdatingPitch();\r\n    cancelAnimationFrame(this.animation);\r\n    this.voice.stop();\r\n    this.tuner.stop();\r\n  }\r\n\r\n  onNextClick() {\r\n    const cookies = new Cookies();\r\n    const userid = cookies.get(\"id\", { path: \"/\" });\r\n    const data = {\r\n      minPitch: this.state.minPitch[1],\r\n      maxPitch: this.state.maxPitch[1],\r\n    };\r\n    vocaliAPI.modifyUser(userid, data).then((response) => {\r\n      this.nextPath(\"/songpref\");\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SimpleHeader back=\"/info\" />\r\n        <Paragraph className=\"description\">\r\n          Sing from your lowest possible note to your highest possible note\r\n        </Paragraph>\r\n        <div className=\"pitches\">\r\n          <div className=\"currentpitches\">\r\n            Current Pitch\r\n            <div className=\"pitchDisplay\">{this.state.currentPitch}</div>\r\n          </div>\r\n          <Divider />\r\n          <div className=\"maxminpitches\">\r\n            <div>\r\n              Min Pitch\r\n              <div className=\"pitchDisplay\">{this.state.minPitch[1]}</div>\r\n            </div>\r\n            <div>\r\n              Max Pitch\r\n              <div className=\"pitchDisplay\">{this.state.maxPitch[1]}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"pitch-buttons\">\r\n          <Button className=\"record-button\" type=\"primary\" onClick={this.handleRecordChange}>\r\n            {this.bool2str(this.state.record)}\r\n          </Button>\r\n          <Button\r\n            className=\"stop-button\"\r\n            type=\"primary\"\r\n            disabled={this.state.disabled || this.state.record}\r\n            onClick={this.onNextClick}\r\n          >\r\n            NEXT\r\n          </Button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Pitch);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Layout, Tag, Avatar } from \"antd\";\r\n\r\nimport Logo from \"./vocali_logo2.svg\";\r\nimport Cookies from \"universal-cookie\";\r\nimport * as vocaliAPI from \"./api/api.js\";\r\nimport \"./css/header.css\";\r\n\r\nconst { Header } = Layout;\r\n\r\nconst InfoHeader = ({ people, mood }) => {\r\n  const [selectedPeople, setPeople] = useState(people);\r\n  const [selectedMood, setMood] = useState(mood);\r\n  const [userName, setName] = useState(\"-\");\r\n  const [userAge, setAge] = useState(\"-\");\r\n  const [userPitch, setPitch] = useState(\"-\");\r\n  const cookies = new Cookies();\r\n\r\n  useEffect(() => {\r\n    const userid = cookies.get(\"id\", { path: \"/\" });\r\n    vocaliAPI.getUser(userid).then((res) => {\r\n      setAge(res.data.age);\r\n      setName(res.data.name);\r\n      setPitch(res.data.minPitch + \" - \" + res.data.maxPitch);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (people && mood) {\r\n      setPeople(people);\r\n      setMood(mood);\r\n    } else {\r\n      setMood(cookies.get(\"mood\", { path: \"/\" }));\r\n      setPeople(cookies.get(\"people\", { path: \"/\" }));\r\n    }\r\n  }, [cookies, mood, people]);\r\n\r\n  return (\r\n    <Header className=\"header\">\r\n      <div className=\"row\">\r\n        <a href=\"/\" style={{ lineHeight: 0 }}>\r\n          <img className=\"logo-left\" src={Logo} alt=\"Vocali Logo\" />\r\n        </a>\r\n        <div className=\"user-info\">\r\n          <Avatar className=\"avatar\" style={{ backgroundColor: \"#D9D9D9\" }}>\r\n            {userName.slice(0, 1)}\r\n          </Avatar>\r\n          <Tag className=\"age-info\">{userAge}</Tag>\r\n          <Tag className=\"pitch-info\">{userPitch}</Tag>\r\n        </div>\r\n      </div>\r\n      <div className=\"mood-dashboard\">\r\n        <p className=\"mood-title\">Today's Mood</p>\r\n        <div className=\"mood-info-div\">\r\n          <Tag className=\"whom-info\">{selectedPeople}</Tag>\r\n          <Tag className=\"mood-info\">{selectedMood}</Tag>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default withRouter(InfoHeader);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Button, Layout, Tag, Divider } from \"antd\";\r\n\r\nimport \"./css/home.css\";\r\nimport Cookies from \"universal-cookie\";\r\nimport InfoHeader from \"./InfoHeader.js\";\r\n// import VocaliFooter from \"./Footer.js\";\r\n\r\nconst { Content } = Layout;\r\nconst { CheckableTag } = Tag;\r\nconst tagsData = [\"Alone\", \"Together\"];\r\nconst tagsData2 = [\"Happy\", \"Energetic\", \"Depression\", \"Calm\"];\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.cookies = new Cookies();\r\n    this.state = {\r\n      selectedPeople: \"\",\r\n      selectedMood: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const people = this.cookies.get(\"people\", { path: \"/\" });\r\n    if (people) {\r\n      this.setState({ selectedPeople: people });\r\n    }\r\n    const mood = this.cookies.get(\"mood\", { path: \"/\" });\r\n    if (mood) {\r\n      this.setState({ selectedMood: mood });\r\n    }\r\n  }\r\n\r\n  nextPath(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  handlePeopleChange(tag, checked) {\r\n    const nextPeople = checked ? tag : \"\";\r\n    this.setState({ selectedPeople: nextPeople });\r\n    this.cookies.set(\"people\", nextPeople, { path: \"/\" });\r\n  }\r\n\r\n  handleMoodChange(tag, checked) {\r\n    const nextMood = checked ? tag : \"\";\r\n    this.setState({ selectedMood: nextMood });\r\n    this.cookies.set(\"mood\", nextMood, { path: \"/\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <InfoHeader people={this.state.selectedPeople} mood={this.state.selectedMood} />\r\n        <Content style={{ backgroundColor: \"#ffffff\" }}>\r\n          <div className=\"selection-board\">\r\n            <div className=\"mood-selection\">\r\n              <p className=\"select-title\">\r\n                Select<br></br>Today's Mood\r\n              </p>\r\n            </div>\r\n            <hr />\r\n            <div className=\"question\">With Whom?</div>\r\n            <div className=\"checkable-tag-div\">\r\n              {tagsData.map((tag) => (\r\n                <CheckableTag\r\n                  key={tag}\r\n                  className=\"checkable-tags\"\r\n                  checked={this.state.selectedPeople === tag}\r\n                  onChange={(checked) => this.handlePeopleChange(tag, checked)}\r\n                >\r\n                  {tag}\r\n                </CheckableTag>\r\n              ))}\r\n            </div>\r\n            <Divider />\r\n            <div className=\"question\">What type of mood are you feeling today?</div>\r\n            <div className=\"checkable-tag-div\">\r\n              {tagsData2.map((tag) => (\r\n                <CheckableTag\r\n                  key={tag}\r\n                  className=\"checkable-tags\"\r\n                  checked={this.state.selectedMood === tag}\r\n                  onChange={(checked) => this.handleMoodChange(tag, checked)}\r\n                >\r\n                  {tag}\r\n                </CheckableTag>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <Button\r\n            className=\"find-button standard\"\r\n            onClick={() =>\r\n              this.nextPath(\r\n                \"/result?people=\" + this.state.selectedPeople + \"&mood=\" + this.state.selectedMood\r\n              )\r\n            }\r\n            type=\"primary\"\r\n          >\r\n            FIND SONG\r\n          </Button>\r\n        </Content>\r\n        {/* <VocaliFooter /> */}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Home);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Layout, Divider } from \"antd\";\r\nimport { HeartOutlined, CoffeeOutlined, HomeOutlined } from \"@ant-design/icons\";\r\n\r\nimport Cookies from \"universal-cookie\";\r\nimport \"./css/footer.css\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nconst VocaliFooter = () => {\r\n  const [selectedPeople, setPeople] = useState(\"\");\r\n  const [selectedMood, setMood] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const cookies = new Cookies();\r\n    setMood(cookies.get(\"mood\", { path: \"/\" }));\r\n    setPeople(cookies.get(\"people\", { path: \"/\" }));\r\n  }, []);\r\n\r\n  return (\r\n    <Footer className=\"vocali-footer\">\r\n      <div className=\"buttons\">\r\n        <a href=\"/home\" className=\"footer-button\">\r\n          <CoffeeOutlined className=\"footer-button-icon\" />\r\n          <span>Mood</span>\r\n        </a>\r\n        <Divider type=\"vertical\" />\r\n        <a\r\n          href={\"/result?people=\" + selectedPeople + \"&mood=\" + selectedMood}\r\n          className=\"footer-button\"\r\n        >\r\n          <HomeOutlined className=\"footer-button-icon\" />\r\n          <span>Result</span>\r\n        </a>\r\n        <Divider type=\"vertical\" />\r\n        <a href=\"/likelist\" className=\"footer-button\">\r\n          <HeartOutlined className=\"footer-button-icon\" />\r\n          <span>Like List</span>\r\n        </a>\r\n      </div>\r\n    </Footer>\r\n  );\r\n};\r\n\r\nexport default withRouter(VocaliFooter);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nimport { Button, Skeleton, Card, Layout, Tag, Modal, Radio } from \"antd\";\r\nimport { FrownOutlined, HeartOutlined, QuestionOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./css/home.css\";\r\nimport \"./css/result.css\";\r\nimport InfoHeader from \"./InfoHeader.js\";\r\nimport VocaliFooter from \"./Footer.js\";\r\nimport * as vocaliAPI from \"./api/api.js\";\r\n\r\nconst { Content } = Layout;\r\nconst { Meta } = Card;\r\nconst { CheckableTag } = Tag;\r\n\r\nclass Result extends React.Component {\r\n  userActions = [\r\n    {\r\n      name: \"dislike\",\r\n      displayName: (\r\n        <p className=\"feedback-tag-description\">\r\n          I don't <br></br>like it\r\n        </p>\r\n      ),\r\n      icon: <FrownOutlined className=\"feedback-tag-icon\" />,\r\n    },\r\n    {\r\n      name: \"noclue\",\r\n      displayName: (\r\n        <p className=\"feedback-tag-description\">\r\n          I have <br></br>no clue\r\n        </p>\r\n      ),\r\n      icon: <QuestionOutlined className=\"feedback-tag-icon\" />,\r\n    },\r\n    {\r\n      name: \"like\",\r\n      displayName: (\r\n        <p className=\"feedback-tag-description\">\r\n          Show more <br></br>like this!\r\n        </p>\r\n      ),\r\n      icon: <HeartOutlined className=\"feedback-tag-icon\" />,\r\n    },\r\n  ];\r\n\r\n  state = {\r\n    songList: [\r\n      {\r\n        songNum: 83377,\r\n        title: '만약에 (드라마\"쾌도 홍길동\")',\r\n        artist: \"태연(소녀시대)\",\r\n        year: 2008,\r\n        genre: \"Ballad\",\r\n        id: \"1BHLy0efFQ8FFxyxgJtTMf\",\r\n      },\r\n      {\r\n        songNum: 21022,\r\n        title: \"흔들리는 꽃들 속에서 네 샴푸 향이 느껴진 거야\",\r\n        artist: \"장범준\",\r\n        year: 2019,\r\n        genre: \"Ballad\",\r\n        id: \"2skS61BQztE5bUpqJnBJAx\",\r\n      },\r\n      {\r\n        songNum: 4772,\r\n        title: \"취중진담\",\r\n        artist: \"전람회\",\r\n        year: 1996,\r\n        genre: \"Ballad\",\r\n        id: \"39FFkPyRLQtYBJkgV6ETAw\",\r\n      },\r\n      {\r\n        songNum: 90515,\r\n        title: \"시차(We Are)(Feat. 로꼬,그레이(GRAY))\",\r\n        artist: \"우원재\",\r\n        year: 2017,\r\n        genre: \"Hiphop\",\r\n        id: \"2SMq0lOqCTHayWa9juoI0d\",\r\n      },\r\n      {\r\n        songNum: 91954,\r\n        title: \"IndiGO\",\r\n        artist: \"Justhis,Kid Milli,NO:EL(장용준),Young B\",\r\n        year: 2018,\r\n        genre: \"Hiphop\",\r\n        id: \"5oxmx6B0kWTuCKgBzv8NpH\",\r\n      },\r\n    ],\r\n    currSongIndex: 0,\r\n    feedbacks: new Map(),\r\n    loading: true,\r\n    adjustModal: false,\r\n    explainModal: false,\r\n    selectedFeedback: \"\",\r\n    moodWeight: \"0\",\r\n    pitchWeight: \"0\",\r\n    prefWeight: \"0\",\r\n    selectedMood: \"\",\r\n    selectedPeople: \"\",\r\n    userId: \"\",\r\n  };\r\n\r\n  loadSongFromModel() {\r\n    console.log(this.state.userId);\r\n    vocaliAPI\r\n      .getRecommendation(\r\n        this.state.userId,\r\n        this.state.selectedMood.toLowerCase() + \",\" + this.state.selectedPeople.toLowerCase(),\r\n        5\r\n      )\r\n      .then((result) => {\r\n        console.log(result.data);\r\n        this.setState({ songList: result.data, currSongIndex: 0 });\r\n      })\r\n      .then(() => {\r\n        this.setState({ loading: false });\r\n      });\r\n  }\r\n\r\n  handleSelectedFeedback(tag, checked, song) {\r\n    if (checked) {\r\n      this.setState({ feedbacks: this.state.feedbacks.set(song.id, tag) });\r\n    }\r\n    vocaliAPI.selectSong(this.state.userId, [song], tag);\r\n    console.log(this.state.feedbacks);\r\n    if (this.state.currSongIndex < 4) {\r\n      this.setState({ currSongIndex: this.state.currSongIndex + 1 });\r\n    } else {\r\n      console.log(\"end!\");\r\n      this.setState({ loading: true });\r\n      this.loadSongFromModel();\r\n    }\r\n  }\r\n\r\n  handleExplainModalChange = () => {\r\n    this.setState({ explainModal: !this.state.explainModal });\r\n  };\r\n\r\n  handleAdjustModalChange = () => {\r\n    if (this.state.adjustModal) {\r\n      const cookies = new Cookies();\r\n      const userId = cookies.get(\"id\", { path: \"/\" });\r\n      const data = {\r\n        moodWeight: parseFloat(this.state.moodWeight),\r\n        prefWeight: parseFloat(this.state.prefWeight),\r\n        pitchWeight: parseFloat(this.state.pitchWeight),\r\n      };\r\n      vocaliAPI\r\n        .modifyUser(userId, data)\r\n        .then(() =>\r\n          this.props.history.push(\r\n            \"/result?people=\" + this.state.selectedPeople + \"&mood=\" + this.state.selectedMood\r\n          )\r\n        );\r\n    }\r\n    this.setState({ adjustModal: !this.state.adjustModal });\r\n  };\r\n\r\n  onChangeMood = (e) => {\r\n    this.setState({ moodWeight: e.target.value });\r\n  };\r\n\r\n  onChangePitch = (e) => {\r\n    this.setState({ pitchWeight: e.target.value });\r\n  };\r\n\r\n  onChangeSongPref = (e) => {\r\n    this.setState({ songPrefWeight: e.target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const values = queryString.parse(this.props.location.search);\r\n    const cookies = new Cookies();\r\n    const userId = cookies.get(\"id\", { path: \"/\" });\r\n    this.setState(\r\n      {\r\n        userId: userId,\r\n        selectedMood: values.mood,\r\n        selectedPeople: values.people,\r\n      },\r\n      () => this.loadSongFromModel()\r\n    );\r\n    // Get weight\r\n    vocaliAPI.getUser(userId).then((result) => {\r\n      this.setState({ moodWeight: result.data.moodWeight.toString() });\r\n      this.setState({ pitchWeight: result.data.pitchWeight.toString() });\r\n      this.setState({ prefWeight: result.data.prefWeight.toString() });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const currSong = this.state.songList[this.state.currSongIndex];\r\n    return (\r\n      <div style={{ backgroundColor: \"#F6F0FE\" }}>\r\n        <InfoHeader />\r\n        <Content className=\"result-contents\">\r\n          <p className=\"result-description\">Vocali found the best song for you!</p>\r\n          <p className=\"result-description-small\">\r\n            If you leave feedback on the recommended song, <br />\r\n            we will recommend a new song.\r\n          </p>\r\n          <Card\r\n            className=\"song-info\"\r\n            title={`Song No. ${currSong.songNum}`}\r\n            extra={\r\n              <Button type=\"link\" onClick={this.handleExplainModalChange} style={{ padding: \"0\" }}>\r\n                Why this song?\r\n              </Button>\r\n            }\r\n            actions={this.userActions.map((userAction) => (\r\n              <CheckableTag\r\n                key={userAction.name}\r\n                checked={this.state.feedbacks.get(currSong.id) === userAction.name}\r\n                onChange={(checked) =>\r\n                  this.handleSelectedFeedback(userAction.name, checked, currSong)\r\n                }\r\n                style={{ width: \"80%\", padding: \"5px\", margin: \"0\" }}\r\n              >\r\n                {userAction.icon}\r\n                {userAction.displayName}\r\n              </CheckableTag>\r\n            ))}\r\n          >\r\n            <Skeleton loading={this.state.loading} active>\r\n              <Meta\r\n                className=\"card-skeleton\"\r\n                title={currSong.title}\r\n                description={currSong.artist}\r\n              />\r\n            </Skeleton>\r\n          </Card>\r\n          <p className=\"result-description-small\">Don't like the result?</p>\r\n          <Button className=\"adjust-button\" type=\"primary\" onClick={this.handleAdjustModalChange}>\r\n            Adjust factor importance\r\n          </Button>\r\n          <Modal\r\n            title=\"Adjust factor importance\"\r\n            visible={this.state.adjustModal}\r\n            onCancel={this.handleAdjustModalChange}\r\n            footer={[\r\n              <Button\r\n                key=\"weight-control-confirm\"\r\n                type=\"primary\"\r\n                onClick={this.handleAdjustModalChange}\r\n              >\r\n                CONFIRM\r\n              </Button>,\r\n            ]}\r\n          >\r\n            <p>You can change how much each factor influences the recommendation</p>\r\n            <div className=\"weight-control-slider\">\r\n              <p className=\"weight-slider-title\">Mood</p>\r\n              <p className=\"weight-slider-description\">\r\n                How much your mood factors into recommendations\r\n              </p>\r\n              <Radio.Group\r\n                className=\"weight-options\"\r\n                defaultValue={this.state.moodWeight}\r\n                onChange={this.onChangeMood}\r\n                buttonStyle=\"solid\"\r\n              >\r\n                <Radio.Button value=\"0\">None</Radio.Button>\r\n                <Radio.Button value=\"0.5\">Moderate</Radio.Button>\r\n                <Radio.Button value=\"1\">Strong</Radio.Button>\r\n              </Radio.Group>\r\n            </div>\r\n            <div className=\"weight-control-slider\">\r\n              <p className=\"weight-slider-title\">Pitch</p>\r\n              <p className=\"weight-slider-description\">\r\n                How much your pitch factors into recommendations\r\n              </p>\r\n              <Radio.Group\r\n                className=\"weight-options\"\r\n                defaultValue={this.state.pitchWeight}\r\n                onChange={this.onChangePitch}\r\n                buttonStyle=\"solid\"\r\n              >\r\n                <Radio.Button value=\"0\">None</Radio.Button>\r\n                <Radio.Button value=\"0.5\">Moderate</Radio.Button>\r\n                <Radio.Button value=\"1\">Strong</Radio.Button>\r\n              </Radio.Group>\r\n            </div>\r\n            <div className=\"weight-control-slider\">\r\n              <p className=\"weight-slider-title\">Song Preference</p>\r\n              <p className=\"weight-slider-description\">\r\n                How much your rating history factors into recommendations\r\n              </p>\r\n              <Radio.Group\r\n                className=\"weight-options\"\r\n                defaultValue={this.state.prefWeight}\r\n                onChange={this.onChangeSongPref}\r\n                buttonStyle=\"solid\"\r\n              >\r\n                <Radio.Button value=\"0\">None</Radio.Button>\r\n                <Radio.Button value=\"0.5\">Moderate</Radio.Button>\r\n                <Radio.Button value=\"1\">Strong</Radio.Button>\r\n              </Radio.Group>\r\n            </div>\r\n          </Modal>\r\n          <Modal\r\n            title=\"Score of this song\"\r\n            visible={this.state.explainModal}\r\n            onCancel={this.handleExplainModalChange}\r\n            footer={[\r\n              <Button\r\n                key=\"weight-control-confirm\"\r\n                type=\"primary\"\r\n                onClick={this.handleExplainModalChange}\r\n              >\r\n                OK\r\n              </Button>,\r\n            ]}\r\n          >\r\n            <div className=\"song-score-info\">\r\n              <div className=\"pitch-score-div\">\r\n                <p className=\"score-title\">Pitch</p>\r\n                <div>\r\n                  <Tag color=\"#6200ee\">Easy</Tag>\r\n                  <Tag>Normal</Tag>\r\n                  <Tag>Hard</Tag>\r\n                </div>\r\n              </div>\r\n              <div className=\"mood-score-div\">\r\n                <p className=\"score-title\">Mood</p>\r\n                <div>\r\n                  This song is <strong>{(currSong.moodScore * 100).toFixed(1)}%</strong>{\" \"}\r\n                  {this.state.selectedMood}\r\n                </div>\r\n              </div>\r\n              <div className=\"song-score-div\">\r\n                <p className=\"score-title\">Preference</p>\r\n                <div className=\"pref-score\">\r\n                  <p>\r\n                    <strong>{(currSong.prefScore * 100).toFixed(1)}% of users</strong> with similar{\" \"}\r\n                    <br />\r\n                    music tastes as you <br />\r\n                    liked this song\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </Content>\r\n        <VocaliFooter />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Result);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Button, Skeleton, Card } from \"antd\";\r\n\r\nimport \"./css/home.css\";\r\nimport \"./css/list.css\";\r\nimport InfoHeader from \"./InfoHeader.js\";\r\nimport VocaliFooter from \"./Footer.js\";\r\nimport Cookies from \"universal-cookie\";\r\nimport * as vocaliAPI from \"./api/api.js\";\r\n\r\nconst { Meta } = Card;\r\n\r\nclass LikeList extends React.Component {\r\n  nextPath(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  state = {\r\n    songList: [\r\n      // {\r\n      //   id: \"x1yk42m_99d\",\r\n      //   title: \"문어의 꿈\",\r\n      //   artist: \"안예은\",\r\n      //   publishedYear: 2021,\r\n      //   genre: \"Dance\",\r\n      //   mood: \"happy\",\r\n      //   pitch: \"A#\",\r\n      //   songNum: 48394,\r\n      // },\r\n      // {\r\n      //   id: \"1hOEq5q9L41E2YbLhVvW5x\",\r\n      //   title: '아로하(드라마 \"슬기로운 의사 생활\")',\r\n      //   artist: \"조정석\",\r\n      //   publishedYear: 2020,\r\n      //   genre: \"Ballad\",\r\n      //   mood: \"energetic\",\r\n      //   pitch: \"A#\",\r\n      //   songNum: 27615,\r\n      // },\r\n    ],\r\n    feedbacks: new Map(),\r\n    loading: false,\r\n    modal: false,\r\n    drawer: false,\r\n    selectedFeedback: \"\",\r\n  };\r\n\r\n  handleSelectedFeedback(tag, checked, songid) {\r\n    if (checked) {\r\n      this.setState({ feedbacks: this.state.feedbacks.set(songid, tag) });\r\n    }\r\n    console.log(this.state.feedbacks);\r\n  }\r\n\r\n  handleDelete(songid) {\r\n    this.setState({\r\n      songList: this.state.songList.filter((song) => song.id !== songid),\r\n    });\r\n    // TODO: API connection\r\n  }\r\n\r\n  componentDidMount() {\r\n    const cookies = new Cookies();\r\n    const userid = cookies.get(\"id\", { path: \"/\" });\r\n    let songList = [];\r\n    vocaliAPI\r\n      .getEvaluation(userid)\r\n      .then((result) => {\r\n        result.data.forEach((song) => {\r\n          if (song.category === \"LIKE\" && song.song) {\r\n            songList.push(song.song);\r\n          }\r\n        });\r\n      })\r\n      .then(() => this.setState({ songList: songList }));\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    console.log(this.state.songList);\r\n    return (\r\n      <>\r\n        <InfoHeader />\r\n        <div className=\"like-list-div\">\r\n          {this.state.songList.map((song) => (\r\n            <Card\r\n              className=\"like-list\"\r\n              title={`Song No. ${song.songNum}`}\r\n              extra={\r\n                <Button type=\"link\" onClick={() => this.handleDelete(song.id)}>\r\n                  Delete\r\n                </Button>\r\n              }\r\n            >\r\n              <Skeleton loading={loading} avatar active>\r\n                <Meta title={song.title} description={song.artist} />\r\n              </Skeleton>\r\n            </Card>\r\n          ))}\r\n          <div style={{ height: \"20px\" }} />\r\n        </div>\r\n        <VocaliFooter />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(LikeList);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Start from \"./Start\";\r\nimport InfoSet from \"./InfoSet\";\r\nimport SongPref from \"./SongPref\";\r\nimport Pitch from \"./PitchDetect\";\r\nimport Home from \"./Home\";\r\nimport Result from \"./Result\";\r\n// import Weight from \"./Weight\";\r\nimport LikeList from \"./List\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename='/vocali-web'>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Start} />\r\n          <Route exact path=\"/home\" component={Home} />\r\n          <Route path=\"/info\" component={InfoSet} />\r\n          <Route path=\"/songpref\" component={SongPref} />\r\n          <Route path=\"/pitch\" component={Pitch} />\r\n          <Route path=\"/result\" component={Result} />\r\n          {/* <Route path=\"/weight\" component={Weight} /> */}\r\n          <Route path=\"/likelist\" component={LikeList} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport BrowserRouter from 'react-router-dom/BrowserRouter'\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n    </BrowserRouter>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}