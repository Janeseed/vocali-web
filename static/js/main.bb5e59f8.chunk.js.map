{"version":3,"sources":["vocali_logo2.svg","SimpleHeader.js","Start.js","api/api.js","InfoSet.js","SongPref.js","PitchDetect.js","InfoHeader.js","Home.js","Footer.js","Result.js","List.js","App.js","index.js"],"names":["withRouter","input","console","log","back","className","href","src","Logo","alt","LeftOutlined","Paragraph","Typography","Start","path","this","props","history","push","onClick","nextPath","type","React","Component","auth","axios","create","baseURL","headers","createUser","name","age","post","InfoSet","state","modal","handleNameChange","e","setState","target","value","handleAgeChange","handleModalChange","setInfo","isNaN","vocaliAPI","then","response","userId","data","id","cookies","Cookies","set","remove","size","placeholder","prefix","UserOutlined","onChange","title","visible","onOk","footer","CheckableTag","Tag","SongPref","selectedSongs","tag","checked","nextSelectedTags","filter","t","songs","category","postList","map","song","JSON","stringify","get","songlist","extra","indexOf","handleSongPref","HeartOutlined","songNum","artist","onNextClick","Pitch","record","disabled","currentPitch","minPitch","maxPitch","handleRecordChange","stopPitch","getPitch","bool2str","bool","bind","logPitch","voice","Wad","source","tuner","Poly","setVolume","add","play","updatePitch","pitch","noteName","animation","requestAnimationFrame","stopUpdatingPitch","cancelAnimationFrame","stop","put","Header","Layout","people","mood","useState","selectedPeople","setPeople","selectedMood","setMood","userName","setName","userAge","setAge","userPitch","setPitch","useEffect","userid","res","style","lineHeight","backgroundColor","slice","Content","tagsData","tagsData2","Home","nextPeople","nextMood","handlePeopleChange","handleMoodChange","Footer","CoffeeOutlined","HomeOutlined","Meta","Card","Result","userActions","displayName","icon","FrownOutlined","QuestionOutlined","songList","publishedYear","genre","feedbacks","Map","loading","adjustModal","explainModal","selectedFeedback","moodWeight","pitchWeight","songPrefWeight","handleExplainModalChange","handleAdjustModalChange","onChangeMood","onChangePitch","onChangeSongPref","songid","values","queryString","parse","location","search","padding","actions","userAction","handleSelectedFeedback","width","margin","avatar","active","color","description","onCancel","Group","defaultValue","buttonStyle","Button","LikeList","drawer","handleDelete","height","App","basename","exact","component","ReactDOM","render","process","document","getElementById"],"mappings":"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","file":"static/js/main.bb5e59f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/vocali_logo2.81bd03c9.svg\";","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { LeftOutlined } from \"@ant-design/icons\";\n\nimport Logo from \"./vocali_logo2.svg\";\nimport \"./css/header.css\";\n\nconst SimpleHeader = (input) => {\n  console.log(input.back);\n  if (input.back === \"none\") {\n    return (\n      <div className=\"navbar\">\n        <a href=\"/\">\n          <img className=\"logo\" src={Logo} alt=\"Vocali Logo\" />\n        </a>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"navbar\">\n        <a href={input.back}>\n          <LeftOutlined className=\"return-button\" />\n        </a>\n        <a href=\"/\">\n          <img className=\"logo\" src={Logo} alt=\"Vocali Logo\" />\n        </a>\n      </div>\n    );\n  }\n};\n\nexport default withRouter(SimpleHeader);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button, Typography } from \"antd\";\n\nimport \"./css/common.css\";\nimport SimpleHeader from \"./SimpleHeader\";\n\nconst { Paragraph } = Typography;\n\nclass Start extends React.Component {\n  nextPath(path) {\n    this.props.history.push(path);\n  }\n\n  render() {\n    return (\n      <>\n        <SimpleHeader back=\"none\" />\n        <div className=\"row-flex-container\">\n          <Paragraph className=\"slogan\">\n            Vocali will find you a{\" \"}\n            <span className=\"highlight\">perfect song to sing at Noraebang</span>\n          </Paragraph>\n          <Button\n            className=\"start-button circle\"\n            onClick={() => this.nextPath(\"/info\")}\n            type=\"primary\"\n          >\n            START\n          </Button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(Start);\n","import axios from \"axios\";\n\nconst auth = axios.create({\n  baseURL: \"https://lit-eyrie-97447.herokuapp.com\",\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n});\n\nexport const getUser = (id) => auth.get(`/users/${id}`);\n\nexport const createUser = (name, age) =>\n  auth.post(`/users`, {\n    name: name,\n    age: age * 1,\n  });\n\nexport const modifyUser = (id, data) =>\n  auth.put(`/users/${id}`, {\n    minPitch: data.minPitch,\n    maxPitch: data.maxPitch,\n  });\n\nexport const selectSong = (userId, songs, category) => {\n  let postList = [];\n  songs.map((song) =>\n    postList.push({\n      id: song.id,\n      category: category,\n    })\n  );\n\n  const data = JSON.stringify(postList);\n  const config = {\n    headers: { \"Content-Type\": \"application/json\" },\n  };\n  console.log(data);\n  return auth.post(`/users/${userId}/songs/select`, data, config);\n};\n\nexport const getEvaluation = (userId) => auth.get(`/users/${userId}/songs/select`);\n\nexport const getRecommendation = (userId, moods) =>\n  auth.get(`/users/${userId}/recomendations?moods=` + moods);\n","import React from \"react\";\nimport { Button, Typography, Input, Modal } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./css/common.css\";\n\nimport * as vocaliAPI from \"./api/api.js\";\nimport Cookies from \"universal-cookie\";\nimport SimpleHeader from \"./SimpleHeader\";\n\nconst { Paragraph } = Typography;\n\nclass InfoSet extends React.Component {\n  state = {\n    name: \"\",\n    age: \"\",\n    modal: false,\n  };\n  handleNameChange = (e) => {\n    this.setState({\n      name: e.target.value,\n    });\n  };\n  handleAgeChange = (e) => {\n    this.setState({\n      age: e.target.value,\n    });\n  };\n  handleModalChange = () => {\n    this.setState({\n      modal: !this.state.modal,\n    });\n  };\n\n  setInfo = () => {\n    const name = this.state.name;\n    const age = this.state.age;\n    if (name === \"\" || age === \"\" || isNaN(age)) {\n      this.handleModalChange();\n      return;\n    }\n    vocaliAPI.createUser(name, age).then((response) => {\n      const userId = response.data.id;\n      const cookies = new Cookies();\n      cookies.set(\"id\", userId, { path: \"/\" });\n      cookies.remove(\"mood\", { path: \"/\" });\n      cookies.remove(\"people\", { path: \"/\" });\n      this.props.history.push(\"/pitch\");\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <SimpleHeader back=\"none\" />\n        <Paragraph className=\"description\">\n          First,<br></br> Put your brief information\n        </Paragraph>\n        <div className=\"inputs\">\n          <div className=\"input-div\">\n            <div className=\"subtitle\">Name</div>\n            <Input\n              className=\"name-input\"\n              size=\"large\"\n              placeholder=\"ex. Gildong\"\n              prefix={<UserOutlined />}\n              onChange={this.handleNameChange}\n            />\n          </div>\n          <div className=\"input-div\">\n            <div className=\"subtitle\">Age</div>\n            <Input\n              className=\"age-input\"\n              size=\"large\"\n              placeholder=\"ex. 27\"\n              onChange={this.handleAgeChange}\n            />\n          </div>\n        </div>\n        <Button className=\"next-button\" onClick={this.setInfo} type=\"primary\">\n          NEXT\n        </Button>\n\n        <Modal\n          title=\"Warning\"\n          visible={this.state.modal}\n          onOk={this.handleModalChange}\n          footer={[\n            <Button key=\"ok\" type=\"primary\" onClick={this.handleModalChange}>\n              OK\n            </Button>,\n          ]}\n        >\n          <p>You should fill out your name and age. Also your age should be valid number :)</p>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default withRouter(InfoSet);\n","import React from \"react\";\nimport { Button, Typography, Card, Tag } from \"antd\";\nimport { HeartOutlined } from \"@ant-design/icons\";\nimport { withRouter } from \"react-router-dom\";\n\nimport * as vocaliAPI from \"./api/api.js\";\nimport Cookies from \"universal-cookie\";\nimport \"./css/common.css\";\nimport songlist from \"./static/songPref.json\";\nimport SimpleHeader from \"./SimpleHeader\";\n\nconst { Paragraph } = Typography;\nconst { CheckableTag } = Tag;\n\nclass SongPref extends React.Component {\n  state = {\n    selectedSongs: [],\n  };\n\n  handleSongPref(tag, checked) {\n    const { selectedSongs } = this.state;\n    const nextSelectedTags = checked\n      ? [...selectedSongs, tag]\n      : selectedSongs.filter((t) => t !== tag);\n    console.log(\"You are interested in: \", nextSelectedTags);\n    this.setState({ selectedSongs: nextSelectedTags });\n  }\n\n  onNextClick(selectedSongs) {\n    console.log(selectedSongs);\n    const cookies = new Cookies();\n    const userId = cookies.get(\"id\", { path: \"/\" });\n    vocaliAPI.selectSong(userId, selectedSongs, \"like\");\n    this.props.history.push(\"/home\");\n  }\n\n  render() {\n    const { selectedSongs } = this.state;\n    return (\n      <div>\n        <SimpleHeader back=\"/pitch\" />\n        <Paragraph className=\"description\">\n          Next,<br></br>Check all the songs you would sing at Noraebang!\n        </Paragraph>\n        <div className=\"song-pref-div\">\n          {songlist.map((song) => (\n            <Card\n              size=\"small\"\n              className=\"song-pref-card\"\n              title={song.title}\n              extra={\n                <CheckableTag\n                  key={song.songNum}\n                  checked={selectedSongs.indexOf(song) > -1}\n                  onChange={(checked) => this.handleSongPref(song, checked)}\n                >\n                  <HeartOutlined />\n                </CheckableTag>\n              }\n            >\n              <p>{song.artist}</p>\n            </Card>\n          ))}\n        </div>\n        <Button\n          className=\"next-button\"\n          onClick={() => this.onNextClick(this.state.selectedSongs)}\n          type=\"primary\"\n        >\n          NEXT\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SongPref);\n","import React from \"react\";\nimport Wad from \"web-audio-daw\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button, Typography, Divider } from \"antd\";\n\nimport SimpleHeader from \"./SimpleHeader\";\nimport * as vocaliAPI from \"./api/api.js\";\nimport Cookies from \"universal-cookie\";\nimport \"./css/pitch.css\";\n\nconst { Paragraph } = Typography;\n\nclass Pitch extends React.Component {\n  constructor(props) {\n    super(props);\n    let voice;\n    let tuner;\n    let animation;\n    let state;\n    this.getPitch = this.getPitch.bind(this);\n    this.logPitch = this.logPitch.bind(this);\n    this.stopPitch = this.stopPitch.bind(this);\n    this.handleRecordChange = this.handleRecordChange.bind(this);\n    this.onNextClick = this.onNextClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.voice = new Wad({ source: \"mic\" });\n    this.tuner = new Wad.Poly();\n  }\n\n  state = {\n    record: false,\n    disabled: true,\n    currentPitch: \"None\",\n    minPitch: [10000, \"None\"],\n    maxPitch: [0, \"None\"],\n  };\n  handleRecordChange = () => {\n    this.setState({\n      record: !this.state.record,\n    });\n    if (!this.state.record) {\n      this.getPitch();\n    } else {\n      this.stopPitch();\n    }\n  };\n  bool2str = (bool) => {\n    if (bool) return \"Stop\";\n    else return \"Record\";\n  };\n\n  nextPath(path) {\n    this.props.history.push(path);\n  }\n\n  getPitch() {\n    this.tuner.setVolume(0);\n    this.tuner.add(this.voice);\n    this.voice.play();\n    this.tuner.updatePitch();\n    this.logPitch();\n  }\n\n  logPitch() {\n    console.log(this.tuner.pitch, this.tuner.noteName);\n    if (this.tuner.noteName) {\n      console.log(this.state.minPitch[0]);\n      if (this.state.disabled) {\n        this.setState({ disabled: false });\n      }\n      if (this.tuner.pitch > this.state.maxPitch[0]) {\n        this.maxPitch = this.tuner.pitch;\n        this.setState({\n          maxPitch: [this.tuner.pitch, this.tuner.noteName],\n        });\n      }\n      if (this.tuner.pitch < this.state.minPitch[0]) {\n        this.minPitch = this.tuner.pitch;\n        this.setState({\n          minPitch: [this.tuner.pitch, this.tuner.noteName],\n        });\n      }\n      this.setState({\n        currentPitch: this.tuner.noteName,\n      });\n    }\n    this.animation = requestAnimationFrame(this.logPitch);\n  }\n\n  stopPitch() {\n    this.tuner.stopUpdatingPitch();\n    cancelAnimationFrame(this.animation);\n    this.voice.stop();\n    this.tuner.stop();\n  }\n\n  onNextClick() {\n    const cookies = new Cookies();\n    const userid = cookies.get(\"id\", { path: \"/\" });\n    const data = {\n      minPitch: this.state.minPitch[1],\n      maxPitch: this.state.maxPitch[1],\n    };\n    vocaliAPI.modifyUser(userid, data).then((response) => {\n      this.nextPath(\"/songpref\");\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <SimpleHeader back=\"/info\" />\n        <Paragraph className=\"description\">\n          Click the button <br />\n          to record your voice\n        </Paragraph>\n        <div className=\"pitches\">\n          <div className=\"currentpitches\">\n            Current Pitch\n            <div className=\"pitchDisplay\">{this.state.currentPitch}</div>\n          </div>\n          <Divider />\n          <div className=\"maxminpitches\">\n            <div>\n              Min Pitch\n              <div className=\"pitchDisplay\">{this.state.minPitch[1]}</div>\n            </div>\n            <div>\n              Max Pitch\n              <div className=\"pitchDisplay\">{this.state.maxPitch[1]}</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"pitch-buttons\">\n          <Button className=\"record-button\" type=\"primary\" onClick={this.handleRecordChange}>\n            {this.bool2str(this.state.record)}\n          </Button>\n          <Button\n            className=\"stop-button\"\n            type=\"primary\"\n            disabled={this.state.disabled || this.state.record}\n            onClick={this.onNextClick}\n          >\n            NEXT\n          </Button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(Pitch);\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Layout, Tag, Avatar } from \"antd\";\n\nimport Logo from \"./vocali_logo2.svg\";\nimport Cookies from \"universal-cookie\";\nimport * as vocaliAPI from \"./api/api.js\";\nimport \"./css/header.css\";\n\nconst { Header } = Layout;\n\nconst InfoHeader = ({ people, mood }) => {\n  const [selectedPeople, setPeople] = useState(people);\n  const [selectedMood, setMood] = useState(mood);\n  const [userName, setName] = useState(\"-\");\n  const [userAge, setAge] = useState(\"-\");\n  const [userPitch, setPitch] = useState(\"-\");\n  const cookies = new Cookies();\n\n  useEffect(() => {\n    const userid = cookies.get(\"id\", { path: \"/\" });\n    vocaliAPI.getUser(userid).then((res) => {\n      setAge(res.data.age);\n      setName(res.data.name);\n      setPitch(res.data.minPitch + \" - \" + res.data.maxPitch);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (people && mood) {\n      setPeople(people);\n      setMood(mood);\n    } else {\n      setMood(cookies.get(\"mood\", { path: \"/\" }));\n      setPeople(cookies.get(\"people\", { path: \"/\" }));\n    }\n  }, [cookies, mood, people]);\n\n  return (\n    <Header className=\"header\">\n      <div className=\"row\">\n        <a href=\"/\" style={{ lineHeight: 0 }}>\n          <img className=\"logo-left\" src={Logo} alt=\"Vocali Logo\" />\n        </a>\n        <div className=\"user-info\">\n          <Avatar className=\"avatar\" style={{ backgroundColor: \"#D9D9D9\" }}>\n            {userName.slice(0, 1)}\n          </Avatar>\n          <Tag className=\"age-info\">{userAge}</Tag>\n          <Tag className=\"pitch-info\">{userPitch}</Tag>\n        </div>\n      </div>\n      <div className=\"mood-dashboard\">\n        <p className=\"mood-title\">Today's Mood</p>\n        <div className=\"mood-info-div\">\n          <Tag className=\"whom-info\">{selectedPeople}</Tag>\n          <Tag className=\"mood-info\">{selectedMood}</Tag>\n        </div>\n      </div>\n    </Header>\n  );\n};\n\nexport default withRouter(InfoHeader);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { Button, Layout, Tag, Divider } from \"antd\";\n\nimport \"./css/home.css\";\nimport Cookies from \"universal-cookie\";\nimport InfoHeader from \"./InfoHeader.js\";\n// import VocaliFooter from \"./Footer.js\";\n\nconst { Content } = Layout;\nconst { CheckableTag } = Tag;\nconst tagsData = [\"Alone\", \"Together\"];\nconst tagsData2 = [\"Happy\", \"Energetic\", \"Depression\", \"Calm\"];\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.cookies = new Cookies();\n    this.state = {\n      selectedPeople: \"\",\n      selectedMood: \"\",\n    };\n  }\n\n  componentDidMount() {\n    const people = this.cookies.get(\"people\", { path: \"/\" });\n    if (people) {\n      this.setState({ selectedPeople: people });\n    }\n    const mood = this.cookies.get(\"mood\", { path: \"/\" });\n    if (mood) {\n      this.setState({ selectedMood: mood });\n    }\n  }\n\n  nextPath(path) {\n    this.props.history.push(path);\n  }\n\n  handlePeopleChange(tag, checked) {\n    const nextPeople = checked ? tag : \"\";\n    this.setState({ selectedPeople: nextPeople });\n    this.cookies.set(\"people\", nextPeople, { path: \"/\" });\n  }\n\n  handleMoodChange(tag, checked) {\n    const nextMood = checked ? tag : \"\";\n    this.setState({ selectedMood: nextMood });\n    this.cookies.set(\"mood\", nextMood, { path: \"/\" });\n  }\n\n  render() {\n    return (\n      <Layout className=\"layout\">\n        <InfoHeader people={this.state.selectedPeople} mood={this.state.selectedMood} />\n        <Content style={{ backgroundColor: \"#ffffff\" }}>\n          <div className=\"selection-board\">\n            <div className=\"mood-selection\">\n              <p className=\"select-title\">\n                Select<br></br>Today's Mood\n              </p>\n            </div>\n            <hr />\n            <div className=\"question\">With Whom?</div>\n            <div className=\"checkable-tag-div\">\n              {tagsData.map((tag) => (\n                <CheckableTag\n                  key={tag}\n                  className=\"checkable-tags\"\n                  checked={this.state.selectedPeople === tag}\n                  onChange={(checked) => this.handlePeopleChange(tag, checked)}\n                >\n                  {tag}\n                </CheckableTag>\n              ))}\n            </div>\n            <Divider />\n            <div className=\"question\">What kind of mood you like today?</div>\n            <div className=\"checkable-tag-div\">\n              {tagsData2.map((tag) => (\n                <CheckableTag\n                  key={tag}\n                  className=\"checkable-tags\"\n                  checked={this.state.selectedMood === tag}\n                  onChange={(checked) => this.handleMoodChange(tag, checked)}\n                >\n                  {tag}\n                </CheckableTag>\n              ))}\n            </div>\n          </div>\n          <Button\n            className=\"find-button standard\"\n            onClick={() =>\n              this.nextPath(\n                \"/result?people=\" + this.state.selectedPeople + \"&mood=\" + this.state.selectedMood\n              )\n            }\n            type=\"primary\"\n          >\n            FIND SONG\n          </Button>\n        </Content>\n        {/* <VocaliFooter /> */}\n      </Layout>\n    );\n  }\n}\n\nexport default withRouter(Home);\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Layout, Divider } from \"antd\";\nimport { HeartOutlined, CoffeeOutlined, HomeOutlined } from \"@ant-design/icons\";\n\nimport Cookies from \"universal-cookie\";\nimport \"./css/footer.css\";\n\nconst { Footer } = Layout;\n\nconst VocaliFooter = () => {\n  const [selectedPeople, setPeople] = useState(\"\");\n  const [selectedMood, setMood] = useState(\"\");\n  const cookies = new Cookies();\n\n  useEffect(() => {\n    setMood(cookies.get(\"mood\", { path: \"/\" }));\n    setPeople(cookies.get(\"people\", { path: \"/\" }));\n  }, [cookies]);\n\n  return (\n    <Footer className=\"vocali-footer\">\n      <div className=\"buttons\">\n        <a href=\"/home\" className=\"footer-button\">\n          <CoffeeOutlined className=\"footer-button-icon\" />\n          <span>Mood</span>\n        </a>\n        <Divider type=\"vertical\" />\n        <a\n          href={\"/result?people=\" + selectedPeople + \"&mood=\" + selectedMood}\n          className=\"footer-button\"\n        >\n          <HomeOutlined className=\"footer-button-icon\" />\n          <span>Result</span>\n        </a>\n        <Divider type=\"vertical\" />\n        <a href=\"/likelist\" className=\"footer-button\">\n          <HeartOutlined className=\"footer-button-icon\" />\n          <span>Like List</span>\n        </a>\n      </div>\n    </Footer>\n  );\n};\n\nexport default withRouter(VocaliFooter);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport Cookies from \"universal-cookie\";\n\nimport { Button, Skeleton, Card, Layout, Avatar, Tag, Modal, Radio } from \"antd\";\nimport { FrownOutlined, HeartOutlined, QuestionOutlined } from \"@ant-design/icons\";\n\nimport \"./css/home.css\";\nimport \"./css/result.css\";\nimport InfoHeader from \"./InfoHeader.js\";\nimport VocaliFooter from \"./Footer.js\";\nimport * as vocaliAPI from \"./api/api.js\";\n\nconst { Content } = Layout;\nconst { Meta } = Card;\nconst { CheckableTag } = Tag;\n\nclass Result extends React.Component {\n  userActions = [\n    {\n      name: \"dislike\",\n      displayName: (\n        <p className=\"feedback-tag-description\">\n          I don't <br></br>like it\n        </p>\n      ),\n      icon: <FrownOutlined className=\"feedback-tag-icon\" />,\n    },\n    {\n      name: \"noclue\",\n      displayName: (\n        <p className=\"feedback-tag-description\">\n          I have <br></br>no clue\n        </p>\n      ),\n      icon: <QuestionOutlined className=\"feedback-tag-icon\" />,\n    },\n    {\n      name: \"like\",\n      displayName: (\n        <p className=\"feedback-tag-description\">\n          Show more <br></br>like this!\n        </p>\n      ),\n      icon: <HeartOutlined className=\"feedback-tag-icon\" />,\n    },\n  ];\n\n  state = {\n    songList: [\n      {\n        id: \"x1yk42m_99d\",\n        title: \"문어의 꿈\",\n        artist: \"안예은\",\n        publishedYear: 2021,\n        genre: \"Dance\",\n        mood: \"happy\",\n        pitch: \"A#\",\n        songNum: 48394,\n      },\n    ],\n    feedbacks: new Map(),\n    loading: false,\n    adjustModal: false,\n    explainModal: false,\n    selectedFeedback: \"\",\n    moodWeight: \"mid\",\n    pitchWeight: \"mid\",\n    songPrefWeight: \"mid\",\n    mood: \"\",\n  };\n\n  handleSelectedFeedback(tag, checked, songid) {\n    if (checked) {\n      this.setState({ feedbacks: this.state.feedbacks.set(songid, tag) });\n    }\n    console.log(this.state.feedbacks);\n  }\n\n  handleExplainModalChange = () => {\n    this.setState({ explainModal: !this.state.explainModal });\n  };\n\n  handleAdjustModalChange = () => {\n    this.setState({ adjustModal: !this.state.adjustModal });\n    // TODO: API connection\n  };\n\n  onChangeMood = (value) => {\n    if (isNaN(value)) {\n      return;\n    }\n    this.setState({\n      moodWeight: value,\n    });\n  };\n\n  onChangePitch = (value) => {\n    if (isNaN(value)) {\n      return;\n    }\n    this.setState({\n      pitchWeight: value,\n    });\n  };\n\n  onChangeSongPref = (value) => {\n    if (isNaN(value)) {\n      return;\n    }\n    this.setState({\n      songPrefWeight: value,\n    });\n  };\n\n  componentDidMount() {\n    const values = queryString.parse(this.props.location.search);\n    this.setState({ mood: values.mood });\n    const cookies = new Cookies();\n    const userId = cookies.get(\"id\", { path: \"/\" });\n    // vocaliAPI.getRecommendation(userId, values.mood + \",\" + values.people).then((result) => {\n    //   console.log(result);\n    // });\n    // TODO: Input 받아서 this.state.songList에 넣기\n  }\n\n  render() {\n    const { loading } = this.state;\n\n    return (\n      <div style={{ backgroundColor: \"#F6F0FE\" }}>\n        <InfoHeader />\n        <Content className=\"result-contents\">\n          <p className=\"result-description\">Vocali found the best song for you!</p>\n          <p className=\"result-description-small\">\n            If you leave feedback on the recommended song, <br />\n            we will recommend a new song.\n          </p>\n          {this.state.songList.map((song) => (\n            <Card\n              className=\"song-info\"\n              title={`Song No. ${song.songNum}`}\n              extra={\n                <Button\n                  type=\"link\"\n                  onClick={this.handleExplainModalChange}\n                  style={{ padding: \"0\" }}\n                >\n                  Why this song?\n                </Button>\n              }\n              actions={this.userActions.map((userAction) => (\n                <CheckableTag\n                  key={userAction.name}\n                  checked={this.state.feedbacks.get(song.id) === userAction.name}\n                  onChange={(checked) =>\n                    this.handleSelectedFeedback(userAction.name, checked, song.id)\n                  }\n                  style={{ width: \"80%\", padding: \"5px\", margin: \"0\" }}\n                >\n                  {userAction.icon}\n                  {userAction.displayName}\n                </CheckableTag>\n              ))}\n            >\n              <Skeleton loading={loading} avatar active>\n                <Meta\n                  className=\"card-skeleton\"\n                  avatar={\n                    <Avatar\n                      style={{\n                        color: \"#000000\",\n                        backgroundColor: \"#D9D9D9\",\n                      }}\n                    >\n                      {song.pitch}\n                    </Avatar>\n                  }\n                  title={song.title}\n                  description={song.artist}\n                />\n              </Skeleton>\n            </Card>\n          ))}\n          <p className=\"result-description-small\">Don't like the result?</p>\n          <Button className=\"adjust-button\" type=\"primary\" onClick={this.handleAdjustModalChange}>\n            Adjust weight\n          </Button>\n          <Modal\n            title=\"Weight control\"\n            visible={this.state.adjustModal}\n            onCancel={this.handleAdjustModalChange}\n            footer={[\n              <Button\n                key=\"weight-control-confirm\"\n                type=\"primary\"\n                onClick={this.handleAdjustModalChange}\n              >\n                CONFIRM\n              </Button>,\n            ]}\n          >\n            <p>You can change the condition of recommendation with slider</p>\n            <div className=\"weight-control-slider\">\n              <p className=\"weight-slider-title\">Mood</p>\n              <p className=\"weight-slider-description\">\n                How much the mood affect the recommendation\n              </p>\n              <Radio.Group\n                className=\"weight-options\"\n                defaultValue={this.state.moodWeight}\n                onChange={this.onChangeMood}\n                buttonStyle=\"solid\"\n              >\n                <Radio.Button value=\"small\">No affect</Radio.Button>\n                <Radio.Button value=\"mid\">Moderate</Radio.Button>\n                <Radio.Button value=\"large\">Large affect</Radio.Button>\n              </Radio.Group>\n            </div>\n            <div className=\"weight-control-slider\">\n              <p className=\"weight-slider-title\">Pitch</p>\n              <p className=\"weight-slider-description\">\n                How much the pitch affect the recommendation\n              </p>\n              <Radio.Group\n                className=\"weight-options\"\n                defaultValue={this.state.pitchWeight}\n                onChange={this.onChangePitch}\n                buttonStyle=\"solid\"\n              >\n                <Radio.Button value=\"small\">No affect</Radio.Button>\n                <Radio.Button value=\"mid\">Moderate</Radio.Button>\n                <Radio.Button value=\"large\">Large affect</Radio.Button>\n              </Radio.Group>\n            </div>\n            <div className=\"weight-control-slider\">\n              <p className=\"weight-slider-title\">Song Preference</p>\n              <p className=\"weight-slider-description\">\n                How much your like history affect the recommendation\n              </p>\n              <Radio.Group\n                className=\"weight-options\"\n                defaultValue={this.state.songPrefWeight}\n                onChange={this.onChangeSongPref}\n                buttonStyle=\"solid\"\n              >\n                <Radio.Button value=\"small\">No affect</Radio.Button>\n                <Radio.Button value=\"mid\">Moderate</Radio.Button>\n                <Radio.Button value=\"large\">Large affect</Radio.Button>\n              </Radio.Group>\n            </div>\n          </Modal>\n          <Modal\n            title=\"Score of this song\"\n            visible={this.state.explainModal}\n            onCancel={this.handleExplainModalChange}\n            footer={[\n              <Button\n                key=\"weight-control-confirm\"\n                type=\"primary\"\n                onClick={this.handleExplainModalChange}\n              >\n                OK\n              </Button>,\n            ]}\n          >\n            <div className=\"song-score-info\">\n              <div className=\"pitch-score-div\">\n                <p className=\"score-title\">Pitch</p>\n                <div>\n                  <Tag color=\"#6200ee\">Easy</Tag>\n                  <Tag>Normal</Tag>\n                  <Tag>Hard</Tag>\n                </div>\n              </div>\n              <div className=\"mood-score-div\">\n                <p className=\"score-title\">Mood</p>\n                <div>\n                  This song is <strong>99%</strong> {this.state.mood}\n                </div>\n              </div>\n              <div className=\"song-score-div\">\n                <p className=\"score-title\">Preference</p>\n                <div className=\"pref-score\">\n                  <p>\n                    <strong>99% of users</strong> who have <br />\n                    similar tastes like this song\n                  </p>\n                </div>\n              </div>\n            </div>\n          </Modal>\n        </Content>\n        <VocaliFooter />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Result);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { Button, Skeleton, Card, Avatar } from \"antd\";\n\nimport \"./css/home.css\";\nimport \"./css/list.css\";\nimport InfoHeader from \"./InfoHeader.js\";\nimport VocaliFooter from \"./Footer.js\";\n\nconst { Meta } = Card;\n\nclass LikeList extends React.Component {\n  nextPath(path) {\n    this.props.history.push(path);\n  }\n\n  state = {\n    songList: [\n      {\n        id: \"x1yk42m_99d\",\n        title: \"문어의 꿈\",\n        artist: \"안예은\",\n        publishedYear: 2021,\n        genre: \"Dance\",\n        mood: \"happy\",\n        pitch: \"A#\",\n        songNum: 48394,\n      },\n      {\n        id: \"1hOEq5q9L41E2YbLhVvW5x\",\n        title: '아로하(드라마 \"슬기로운 의사 생활\")',\n        artist: \"조정석\",\n        publishedYear: 2020,\n        genre: \"Ballad\",\n        mood: \"energetic\",\n        pitch: \"A#\",\n        songNum: 27615,\n      },\n    ],\n    feedbacks: new Map(),\n    loading: false,\n    modal: false,\n    drawer: false,\n    selectedFeedback: \"\",\n  };\n\n  handleSelectedFeedback(tag, checked, songid) {\n    if (checked) {\n      this.setState({ feedbacks: this.state.feedbacks.set(songid, tag) });\n    }\n    console.log(this.state.feedbacks);\n  }\n\n  handleDelete(songid) {\n    this.setState({\n      songList: this.state.songList.filter((song) => song.id !== songid),\n    });\n    // TODO: API connection\n  }\n\n  render() {\n    const { loading } = this.state;\n\n    return (\n      <>\n        <InfoHeader />\n        <div className=\"like-list-div\">\n          {this.state.songList.map((song) => (\n            <Card\n              className=\"like-list\"\n              title={`Song No. ${song.songNum}`}\n              extra={\n                <Button type=\"link\" onClick={() => this.handleDelete(song.id)}>\n                  Delete\n                </Button>\n              }\n            >\n              <Skeleton loading={loading} avatar active>\n                <Meta\n                  avatar={\n                    <Avatar\n                      style={{\n                        color: \"#000000\",\n                        backgroundColor: \"#D9D9D9\",\n                      }}\n                    >\n                      {song.pitch}\n                    </Avatar>\n                  }\n                  title={song.title}\n                  description={song.artist}\n                />\n              </Skeleton>\n            </Card>\n          ))}\n          <div style={{ height: \"20px\" }} />\n        </div>\n        <VocaliFooter />\n      </>\n    );\n  }\n}\n\nexport default withRouter(LikeList);\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Start from \"./Start\";\nimport InfoSet from \"./InfoSet\";\nimport SongPref from \"./SongPref\";\nimport Pitch from \"./PitchDetect\";\nimport Home from \"./Home\";\nimport Result from \"./Result\";\n// import Weight from \"./Weight\";\nimport LikeList from \"./List\";\n\nfunction App() {\n  return (\n    <Router basename='/vocali-web'>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Start} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route path=\"/info\" component={InfoSet} />\n          <Route path=\"/songpref\" component={SongPref} />\n          <Route path=\"/pitch\" component={Pitch} />\n          <Route path=\"/result\" component={Result} />\n          {/* <Route path=\"/weight\" component={Weight} /> */}\n          <Route path=\"/likelist\" component={LikeList} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport BrowserRouter from 'react-router-dom/BrowserRouter'\n\nimport App from \"./App\";\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}