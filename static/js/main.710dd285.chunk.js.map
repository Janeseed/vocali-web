{"version":3,"sources":["vocali_logo2.svg","SimpleHeader.js","Start.js","api/api.js","InfoSet.js","SongPref.js","PitchDetect.js","InfoHeader.js","Home.js","Footer.js","Result.js","List.js","App.js","index.js"],"names":["withRouter","input","console","log","back","className","href","src","Logo","alt","LeftOutlined","Paragraph","Typography","Start","path","this","props","history","push","onClick","nextPath","type","React","Component","auth","axios","create","baseURL","headers","createUser","name","age","post","InfoSet","state","modal","handleNameChange","e","setState","target","value","handleAgeChange","handleModalChange","setInfo","isNaN","vocaliAPI","then","response","userId","data","id","cookies","Cookies","set","remove","size","placeholder","prefix","UserOutlined","onChange","title","visible","onOk","footer","CheckableTag","Tag","SongPref","selectedSongs","tag","checked","nextSelectedTags","filter","t","songs","category","postList","map","song","JSON","stringify","get","songlist","extra","indexOf","handleSongPref","HeartOutlined","songNum","artist","onNextClick","Pitch","record","disabled","currentPitch","minPitch","maxPitch","handleRecordChange","stopPitch","getPitch","bool2str","bool","bind","logPitch","voice","Wad","source","tuner","Poly","setVolume","add","play","updatePitch","pitch","noteName","animation","requestAnimationFrame","stopUpdatingPitch","cancelAnimationFrame","stop","put","Header","Layout","people","mood","useState","selectedPeople","setPeople","selectedMood","setMood","userName","setName","userAge","setAge","userPitch","setPitch","useEffect","userid","res","style","lineHeight","backgroundColor","slice","Content","tagsData","tagsData2","Home","nextPeople","nextMood","handlePeopleChange","handleMoodChange","Footer","CoffeeOutlined","HomeOutlined","Meta","Card","Result","userActions","displayName","icon","FrownOutlined","QuestionOutlined","songList","publishedYear","genre","feedbacks","Map","loading","adjustModal","explainModal","selectedFeedback","moodWeight","pitchWeight","songPrefWeight","handleExplainModalChange","handleAdjustModalChange","onChangeMood","onChangePitch","onChangeSongPref","songid","values","queryString","parse","location","search","padding","actions","userAction","handleSelectedFeedback","width","margin","avatar","active","color","description","onCancel","Group","defaultValue","buttonStyle","Button","LikeList","drawer","handleDelete","height","App","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.710dd285.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/vocali_logo2.81bd03c9.svg\";","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\n\r\nimport Logo from \"./vocali_logo2.svg\";\r\nimport \"./css/header.css\";\r\n\r\nconst SimpleHeader = (input) => {\r\n  console.log(input.back);\r\n  if (input.back === \"none\") {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <a href=\"/\">\r\n          <img className=\"logo\" src={Logo} alt=\"Vocali Logo\" />\r\n        </a>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <a href={input.back}>\r\n          <LeftOutlined className=\"return-button\" />\r\n        </a>\r\n        <a href=\"/\">\r\n          <img className=\"logo\" src={Logo} alt=\"Vocali Logo\" />\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withRouter(SimpleHeader);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button, Typography } from \"antd\";\r\n\r\nimport \"./css/common.css\";\r\nimport SimpleHeader from \"./SimpleHeader\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Start extends React.Component {\r\n  nextPath(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SimpleHeader back=\"none\" />\r\n        <div className=\"row-flex-container\">\r\n          <Paragraph className=\"slogan\">\r\n            Vocali will find you a{\" \"}\r\n            <span className=\"highlight\">perfect song to sing at Noraebang</span>\r\n          </Paragraph>\r\n          <Button\r\n            className=\"start-button circle\"\r\n            onClick={() => this.nextPath(\"/info\")}\r\n            type=\"primary\"\r\n          >\r\n            START\r\n          </Button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Start);\r\n","import axios from \"axios\";\r\n\r\nconst auth = axios.create({\r\n  baseURL: \"https://lit-eyrie-97447.herokuapp.com\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport const getUser = (id) => auth.get(`/users/${id}`);\r\n\r\nexport const createUser = (name, age) =>\r\n  auth.post(`/users`, {\r\n    name: name,\r\n    age: age * 1,\r\n  });\r\n\r\nexport const modifyUser = (id, data) =>\r\n  auth.put(`/users/${id}`, {\r\n    minPitch: data.minPitch,\r\n    maxPitch: data.maxPitch,\r\n  });\r\n\r\nexport const selectSong = (userId, songs, category) => {\r\n  let postList = [];\r\n  songs.map((song) =>\r\n    postList.push({\r\n      id: song.id,\r\n      category: category,\r\n    })\r\n  );\r\n\r\n  const data = JSON.stringify(postList);\r\n  const config = {\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n  console.log(data);\r\n  return auth.post(`/users/${userId}/songs/select`, data, config);\r\n};\r\n\r\nexport const getEvaluation = (userId) => auth.get(`/users/${userId}/songs/select`);\r\n\r\nexport const getRecommendation = (userId, moods) =>\r\n  auth.get(`/users/${userId}/recomendations?moods=` + moods);\r\n","import React from \"react\";\r\nimport { Button, Typography, Input, Modal } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./css/common.css\";\r\n\r\nimport * as vocaliAPI from \"./api/api.js\";\r\nimport Cookies from \"universal-cookie\";\r\nimport SimpleHeader from \"./SimpleHeader\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass InfoSet extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    age: \"\",\r\n    modal: false,\r\n  };\r\n  handleNameChange = (e) => {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  };\r\n  handleAgeChange = (e) => {\r\n    this.setState({\r\n      age: e.target.value,\r\n    });\r\n  };\r\n  handleModalChange = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  };\r\n\r\n  setInfo = () => {\r\n    const name = this.state.name;\r\n    const age = this.state.age;\r\n    if (name === \"\" || age === \"\" || isNaN(age)) {\r\n      this.handleModalChange();\r\n      return;\r\n    }\r\n    vocaliAPI.createUser(name, age).then((response) => {\r\n      const userId = response.data.id;\r\n      const cookies = new Cookies();\r\n      cookies.set(\"id\", userId, { path: \"/\" });\r\n      cookies.remove(\"mood\", { path: \"/\" });\r\n      cookies.remove(\"people\", { path: \"/\" });\r\n      this.props.history.push(\"/pitch\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SimpleHeader back=\"none\" />\r\n        <Paragraph className=\"description\">\r\n          First,<br></br> Put your brief information\r\n        </Paragraph>\r\n        <div className=\"inputs\">\r\n          <div className=\"input-div\">\r\n            <div className=\"subtitle\">Name</div>\r\n            <Input\r\n              className=\"name-input\"\r\n              size=\"large\"\r\n              placeholder=\"ex. Gildong\"\r\n              prefix={<UserOutlined />}\r\n              onChange={this.handleNameChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-div\">\r\n            <div className=\"subtitle\">Age</div>\r\n            <Input\r\n              className=\"age-input\"\r\n              size=\"large\"\r\n              placeholder=\"ex. 27\"\r\n              onChange={this.handleAgeChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Button className=\"next-button\" onClick={this.setInfo} type=\"primary\">\r\n          NEXT\r\n        </Button>\r\n\r\n        <Modal\r\n          title=\"Warning\"\r\n          visible={this.state.modal}\r\n          onOk={this.handleModalChange}\r\n          footer={[\r\n            <Button key=\"ok\" type=\"primary\" onClick={this.handleModalChange}>\r\n              OK\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <p>You should fill out your name and age. Also your age should be valid number :)</p>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(InfoSet);\r\n","import React from \"react\";\r\nimport { Button, Typography, Card, Tag } from \"antd\";\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport * as vocaliAPI from \"./api/api.js\";\r\nimport Cookies from \"universal-cookie\";\r\nimport \"./css/common.css\";\r\nimport songlist from \"./static/songPref.json\";\r\nimport SimpleHeader from \"./SimpleHeader\";\r\n\r\nconst { Paragraph } = Typography;\r\nconst { CheckableTag } = Tag;\r\n\r\nclass SongPref extends React.Component {\r\n  state = {\r\n    selectedSongs: [],\r\n  };\r\n\r\n  handleSongPref(tag, checked) {\r\n    const { selectedSongs } = this.state;\r\n    const nextSelectedTags = checked\r\n      ? [...selectedSongs, tag]\r\n      : selectedSongs.filter((t) => t !== tag);\r\n    console.log(\"You are interested in: \", nextSelectedTags);\r\n    this.setState({ selectedSongs: nextSelectedTags });\r\n  }\r\n\r\n  onNextClick(selectedSongs) {\r\n    console.log(selectedSongs);\r\n    const cookies = new Cookies();\r\n    const userId = cookies.get(\"id\", { path: \"/\" });\r\n    vocaliAPI.selectSong(userId, selectedSongs, \"like\");\r\n    this.props.history.push(\"/home\");\r\n  }\r\n\r\n  render() {\r\n    const { selectedSongs } = this.state;\r\n    return (\r\n      <div>\r\n        <SimpleHeader back=\"/pitch\" />\r\n        <Paragraph className=\"description\">\r\n          Next,<br></br>Check all the songs you would sing at Noraebang!\r\n        </Paragraph>\r\n        <div className=\"song-pref-div\">\r\n          {songlist.map((song) => (\r\n            <Card\r\n              size=\"small\"\r\n              className=\"song-pref-card\"\r\n              title={song.title}\r\n              extra={\r\n                <CheckableTag\r\n                  key={song.songNum}\r\n                  checked={selectedSongs.indexOf(song) > -1}\r\n                  onChange={(checked) => this.handleSongPref(song, checked)}\r\n                >\r\n                  <HeartOutlined />\r\n                </CheckableTag>\r\n              }\r\n            >\r\n              <p>{song.artist}</p>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n        <Button\r\n          className=\"next-button\"\r\n          onClick={() => this.onNextClick(this.state.selectedSongs)}\r\n          type=\"primary\"\r\n        >\r\n          NEXT\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SongPref);\r\n","import React from \"react\";\r\nimport Wad from \"web-audio-daw\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button, Typography, Divider } from \"antd\";\r\n\r\nimport SimpleHeader from \"./SimpleHeader\";\r\nimport * as vocaliAPI from \"./api/api.js\";\r\nimport Cookies from \"universal-cookie\";\r\nimport \"./css/pitch.css\";\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nclass Pitch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let voice;\r\n    let tuner;\r\n    let animation;\r\n    let state;\r\n    this.getPitch = this.getPitch.bind(this);\r\n    this.logPitch = this.logPitch.bind(this);\r\n    this.stopPitch = this.stopPitch.bind(this);\r\n    this.handleRecordChange = this.handleRecordChange.bind(this);\r\n    this.onNextClick = this.onNextClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.voice = new Wad({ source: \"mic\" });\r\n    this.tuner = new Wad.Poly();\r\n  }\r\n\r\n  state = {\r\n    record: false,\r\n    disabled: true,\r\n    currentPitch: \"None\",\r\n    minPitch: [10000, \"None\"],\r\n    maxPitch: [0, \"None\"],\r\n  };\r\n  handleRecordChange = () => {\r\n    this.setState({\r\n      record: !this.state.record,\r\n    });\r\n    if (!this.state.record) {\r\n      this.getPitch();\r\n    } else {\r\n      this.stopPitch();\r\n    }\r\n  };\r\n  bool2str = (bool) => {\r\n    if (bool) return \"Stop\";\r\n    else return \"Record\";\r\n  };\r\n\r\n  nextPath(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  getPitch() {\r\n    this.tuner.setVolume(0);\r\n    this.tuner.add(this.voice);\r\n    this.voice.play();\r\n    this.tuner.updatePitch();\r\n    this.logPitch();\r\n  }\r\n\r\n  logPitch() {\r\n    console.log(this.tuner.pitch, this.tuner.noteName);\r\n    if (this.tuner.noteName) {\r\n      console.log(this.state.minPitch[0]);\r\n      if (this.state.disabled) {\r\n        this.setState({ disabled: false });\r\n      }\r\n      if (this.tuner.pitch > this.state.maxPitch[0]) {\r\n        this.maxPitch = this.tuner.pitch;\r\n        this.setState({\r\n          maxPitch: [this.tuner.pitch, this.tuner.noteName],\r\n        });\r\n      }\r\n      if (this.tuner.pitch < this.state.minPitch[0]) {\r\n        this.minPitch = this.tuner.pitch;\r\n        this.setState({\r\n          minPitch: [this.tuner.pitch, this.tuner.noteName],\r\n        });\r\n      }\r\n      this.setState({\r\n        currentPitch: this.tuner.noteName,\r\n      });\r\n    }\r\n    this.animation = requestAnimationFrame(this.logPitch);\r\n  }\r\n\r\n  stopPitch() {\r\n    this.tuner.stopUpdatingPitch();\r\n    cancelAnimationFrame(this.animation);\r\n    this.voice.stop();\r\n    this.tuner.stop();\r\n  }\r\n\r\n  onNextClick() {\r\n    const cookies = new Cookies();\r\n    const userid = cookies.get(\"id\", { path: \"/\" });\r\n    const data = {\r\n      minPitch: this.state.minPitch[1],\r\n      maxPitch: this.state.maxPitch[1],\r\n    };\r\n    vocaliAPI.modifyUser(userid, data).then((response) => {\r\n      this.nextPath(\"/songpref\");\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SimpleHeader back=\"/info\" />\r\n        <Paragraph className=\"description\">\r\n          Click the button <br />\r\n          to record your voice\r\n        </Paragraph>\r\n        <div className=\"pitches\">\r\n          <div className=\"currentpitches\">\r\n            Current Pitch\r\n            <div className=\"pitchDisplay\">{this.state.currentPitch}</div>\r\n          </div>\r\n          <Divider />\r\n          <div className=\"maxminpitches\">\r\n            <div>\r\n              Min Pitch\r\n              <div className=\"pitchDisplay\">{this.state.minPitch[1]}</div>\r\n            </div>\r\n            <div>\r\n              Max Pitch\r\n              <div className=\"pitchDisplay\">{this.state.maxPitch[1]}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"pitch-buttons\">\r\n          <Button className=\"record-button\" type=\"primary\" onClick={this.handleRecordChange}>\r\n            {this.bool2str(this.state.record)}\r\n          </Button>\r\n          <Button\r\n            className=\"stop-button\"\r\n            type=\"primary\"\r\n            disabled={this.state.disabled || this.state.record}\r\n            onClick={this.onNextClick}\r\n          >\r\n            NEXT\r\n          </Button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Pitch);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Layout, Tag, Avatar } from \"antd\";\r\n\r\nimport Logo from \"./vocali_logo2.svg\";\r\nimport Cookies from \"universal-cookie\";\r\nimport * as vocaliAPI from \"./api/api.js\";\r\nimport \"./css/header.css\";\r\n\r\nconst { Header } = Layout;\r\n\r\nconst InfoHeader = ({ people, mood }) => {\r\n  const [selectedPeople, setPeople] = useState(people);\r\n  const [selectedMood, setMood] = useState(mood);\r\n  const [userName, setName] = useState(\"-\");\r\n  const [userAge, setAge] = useState(\"-\");\r\n  const [userPitch, setPitch] = useState(\"-\");\r\n  const cookies = new Cookies();\r\n\r\n  useEffect(() => {\r\n    const userid = cookies.get(\"id\", { path: \"/\" });\r\n    vocaliAPI.getUser(userid).then((res) => {\r\n      setAge(res.data.age);\r\n      setName(res.data.name);\r\n      setPitch(res.data.minPitch + \" - \" + res.data.maxPitch);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (people && mood) {\r\n      setPeople(people);\r\n      setMood(mood);\r\n    } else {\r\n      setMood(cookies.get(\"mood\", { path: \"/\" }));\r\n      setPeople(cookies.get(\"people\", { path: \"/\" }));\r\n    }\r\n  }, [cookies, mood, people]);\r\n\r\n  return (\r\n    <Header className=\"header\">\r\n      <div className=\"row\">\r\n        <a href=\"/\" style={{ lineHeight: 0 }}>\r\n          <img className=\"logo-left\" src={Logo} alt=\"Vocali Logo\" />\r\n        </a>\r\n        <div className=\"user-info\">\r\n          <Avatar className=\"avatar\" style={{ backgroundColor: \"#D9D9D9\" }}>\r\n            {userName.slice(0, 1)}\r\n          </Avatar>\r\n          <Tag className=\"age-info\">{userAge}</Tag>\r\n          <Tag className=\"pitch-info\">{userPitch}</Tag>\r\n        </div>\r\n      </div>\r\n      <div className=\"mood-dashboard\">\r\n        <p className=\"mood-title\">Today's Mood</p>\r\n        <div className=\"mood-info-div\">\r\n          <Tag className=\"whom-info\">{selectedPeople}</Tag>\r\n          <Tag className=\"mood-info\">{selectedMood}</Tag>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default withRouter(InfoHeader);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Button, Layout, Tag, Divider } from \"antd\";\r\n\r\nimport \"./css/home.css\";\r\nimport Cookies from \"universal-cookie\";\r\nimport InfoHeader from \"./InfoHeader.js\";\r\n// import VocaliFooter from \"./Footer.js\";\r\n\r\nconst { Content } = Layout;\r\nconst { CheckableTag } = Tag;\r\nconst tagsData = [\"Alone\", \"Together\"];\r\nconst tagsData2 = [\"Happy\", \"Energetic\", \"Depression\", \"Calm\"];\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.cookies = new Cookies();\r\n    this.state = {\r\n      selectedPeople: \"\",\r\n      selectedMood: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const people = this.cookies.get(\"people\", { path: \"/\" });\r\n    if (people) {\r\n      this.setState({ selectedPeople: people });\r\n    }\r\n    const mood = this.cookies.get(\"mood\", { path: \"/\" });\r\n    if (mood) {\r\n      this.setState({ selectedMood: mood });\r\n    }\r\n  }\r\n\r\n  nextPath(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  handlePeopleChange(tag, checked) {\r\n    const nextPeople = checked ? tag : \"\";\r\n    this.setState({ selectedPeople: nextPeople });\r\n    this.cookies.set(\"people\", nextPeople, { path: \"/\" });\r\n  }\r\n\r\n  handleMoodChange(tag, checked) {\r\n    const nextMood = checked ? tag : \"\";\r\n    this.setState({ selectedMood: nextMood });\r\n    this.cookies.set(\"mood\", nextMood, { path: \"/\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <InfoHeader people={this.state.selectedPeople} mood={this.state.selectedMood} />\r\n        <Content style={{ backgroundColor: \"#ffffff\" }}>\r\n          <div className=\"selection-board\">\r\n            <div className=\"mood-selection\">\r\n              <p className=\"select-title\">\r\n                Select<br></br>Today's Mood\r\n              </p>\r\n            </div>\r\n            <hr />\r\n            <div className=\"question\">With Whom?</div>\r\n            <div className=\"checkable-tag-div\">\r\n              {tagsData.map((tag) => (\r\n                <CheckableTag\r\n                  key={tag}\r\n                  className=\"checkable-tags\"\r\n                  checked={this.state.selectedPeople === tag}\r\n                  onChange={(checked) => this.handlePeopleChange(tag, checked)}\r\n                >\r\n                  {tag}\r\n                </CheckableTag>\r\n              ))}\r\n            </div>\r\n            <Divider />\r\n            <div className=\"question\">What kind of mood you like today?</div>\r\n            <div className=\"checkable-tag-div\">\r\n              {tagsData2.map((tag) => (\r\n                <CheckableTag\r\n                  key={tag}\r\n                  className=\"checkable-tags\"\r\n                  checked={this.state.selectedMood === tag}\r\n                  onChange={(checked) => this.handleMoodChange(tag, checked)}\r\n                >\r\n                  {tag}\r\n                </CheckableTag>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <Button\r\n            className=\"find-button standard\"\r\n            onClick={() =>\r\n              this.nextPath(\r\n                \"/result?people=\" + this.state.selectedPeople + \"&mood=\" + this.state.selectedMood\r\n              )\r\n            }\r\n            type=\"primary\"\r\n          >\r\n            FIND SONG\r\n          </Button>\r\n        </Content>\r\n        {/* <VocaliFooter /> */}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Home);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Layout, Divider } from \"antd\";\r\nimport { HeartOutlined, CoffeeOutlined, HomeOutlined } from \"@ant-design/icons\";\r\n\r\nimport Cookies from \"universal-cookie\";\r\nimport \"./css/footer.css\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nconst VocaliFooter = () => {\r\n  const [selectedPeople, setPeople] = useState(\"\");\r\n  const [selectedMood, setMood] = useState(\"\");\r\n  const cookies = new Cookies();\r\n\r\n  useEffect(() => {\r\n    setMood(cookies.get(\"mood\", { path: \"/\" }));\r\n    setPeople(cookies.get(\"people\", { path: \"/\" }));\r\n  }, [cookies]);\r\n\r\n  return (\r\n    <Footer className=\"vocali-footer\">\r\n      <div className=\"buttons\">\r\n        <a href=\"/home\" className=\"footer-button\">\r\n          <CoffeeOutlined className=\"footer-button-icon\" />\r\n          <span>Mood</span>\r\n        </a>\r\n        <Divider type=\"vertical\" />\r\n        <a\r\n          href={\"/result?people=\" + selectedPeople + \"&mood=\" + selectedMood}\r\n          className=\"footer-button\"\r\n        >\r\n          <HomeOutlined className=\"footer-button-icon\" />\r\n          <span>Result</span>\r\n        </a>\r\n        <Divider type=\"vertical\" />\r\n        <a href=\"/likelist\" className=\"footer-button\">\r\n          <HeartOutlined className=\"footer-button-icon\" />\r\n          <span>Like List</span>\r\n        </a>\r\n      </div>\r\n    </Footer>\r\n  );\r\n};\r\n\r\nexport default withRouter(VocaliFooter);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nimport { Button, Skeleton, Card, Layout, Avatar, Tag, Modal, Radio } from \"antd\";\r\nimport { FrownOutlined, HeartOutlined, QuestionOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./css/home.css\";\r\nimport \"./css/result.css\";\r\nimport InfoHeader from \"./InfoHeader.js\";\r\nimport VocaliFooter from \"./Footer.js\";\r\nimport * as vocaliAPI from \"./api/api.js\";\r\n\r\nconst { Content } = Layout;\r\nconst { Meta } = Card;\r\nconst { CheckableTag } = Tag;\r\n\r\nclass Result extends React.Component {\r\n  userActions = [\r\n    {\r\n      name: \"dislike\",\r\n      displayName: (\r\n        <p className=\"feedback-tag-description\">\r\n          I don't <br></br>like it\r\n        </p>\r\n      ),\r\n      icon: <FrownOutlined className=\"feedback-tag-icon\" />,\r\n    },\r\n    {\r\n      name: \"noclue\",\r\n      displayName: (\r\n        <p className=\"feedback-tag-description\">\r\n          I have <br></br>no clue\r\n        </p>\r\n      ),\r\n      icon: <QuestionOutlined className=\"feedback-tag-icon\" />,\r\n    },\r\n    {\r\n      name: \"like\",\r\n      displayName: (\r\n        <p className=\"feedback-tag-description\">\r\n          Show more <br></br>like this!\r\n        </p>\r\n      ),\r\n      icon: <HeartOutlined className=\"feedback-tag-icon\" />,\r\n    },\r\n  ];\r\n\r\n  state = {\r\n    songList: [\r\n      {\r\n        id: \"x1yk42m_99d\",\r\n        title: \"문어의 꿈\",\r\n        artist: \"안예은\",\r\n        publishedYear: 2021,\r\n        genre: \"Dance\",\r\n        mood: \"happy\",\r\n        pitch: \"A#\",\r\n        songNum: 48394,\r\n      },\r\n    ],\r\n    feedbacks: new Map(),\r\n    loading: false,\r\n    adjustModal: false,\r\n    explainModal: false,\r\n    selectedFeedback: \"\",\r\n    moodWeight: \"mid\",\r\n    pitchWeight: \"mid\",\r\n    songPrefWeight: \"mid\",\r\n    mood: \"\",\r\n  };\r\n\r\n  handleSelectedFeedback(tag, checked, songid) {\r\n    if (checked) {\r\n      this.setState({ feedbacks: this.state.feedbacks.set(songid, tag) });\r\n    }\r\n    console.log(this.state.feedbacks);\r\n  }\r\n\r\n  handleExplainModalChange = () => {\r\n    this.setState({ explainModal: !this.state.explainModal });\r\n  };\r\n\r\n  handleAdjustModalChange = () => {\r\n    this.setState({ adjustModal: !this.state.adjustModal });\r\n    // TODO: API connection\r\n  };\r\n\r\n  onChangeMood = (value) => {\r\n    if (isNaN(value)) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      moodWeight: value,\r\n    });\r\n  };\r\n\r\n  onChangePitch = (value) => {\r\n    if (isNaN(value)) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      pitchWeight: value,\r\n    });\r\n  };\r\n\r\n  onChangeSongPref = (value) => {\r\n    if (isNaN(value)) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      songPrefWeight: value,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const values = queryString.parse(this.props.location.search);\r\n    this.setState({ mood: values.mood });\r\n    const cookies = new Cookies();\r\n    const userId = cookies.get(\"id\", { path: \"/\" });\r\n    // vocaliAPI.getRecommendation(userId, values.mood + \",\" + values.people).then((result) => {\r\n    //   console.log(result);\r\n    // });\r\n    // TODO: Input 받아서 this.state.songList에 넣기\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n\r\n    return (\r\n      <div style={{ backgroundColor: \"#F6F0FE\" }}>\r\n        <InfoHeader />\r\n        <Content className=\"result-contents\">\r\n          <p className=\"result-description\">Vocali found the best song for you!</p>\r\n          <p className=\"result-description-small\">\r\n            If you leave feedback on the recommended song, <br />\r\n            we will recommend a new song.\r\n          </p>\r\n          {this.state.songList.map((song) => (\r\n            <Card\r\n              className=\"song-info\"\r\n              title={`Song No. ${song.songNum}`}\r\n              extra={\r\n                <Button\r\n                  type=\"link\"\r\n                  onClick={this.handleExplainModalChange}\r\n                  style={{ padding: \"0\" }}\r\n                >\r\n                  Why this song?\r\n                </Button>\r\n              }\r\n              actions={this.userActions.map((userAction) => (\r\n                <CheckableTag\r\n                  key={userAction.name}\r\n                  checked={this.state.feedbacks.get(song.id) === userAction.name}\r\n                  onChange={(checked) =>\r\n                    this.handleSelectedFeedback(userAction.name, checked, song.id)\r\n                  }\r\n                  style={{ width: \"80%\", padding: \"5px\", margin: \"0\" }}\r\n                >\r\n                  {userAction.icon}\r\n                  {userAction.displayName}\r\n                </CheckableTag>\r\n              ))}\r\n            >\r\n              <Skeleton loading={loading} avatar active>\r\n                <Meta\r\n                  className=\"card-skeleton\"\r\n                  avatar={\r\n                    <Avatar\r\n                      style={{\r\n                        color: \"#000000\",\r\n                        backgroundColor: \"#D9D9D9\",\r\n                      }}\r\n                    >\r\n                      {song.pitch}\r\n                    </Avatar>\r\n                  }\r\n                  title={song.title}\r\n                  description={song.artist}\r\n                />\r\n              </Skeleton>\r\n            </Card>\r\n          ))}\r\n          <p className=\"result-description-small\">Don't like the result?</p>\r\n          <Button className=\"adjust-button\" type=\"primary\" onClick={this.handleAdjustModalChange}>\r\n            Adjust weight\r\n          </Button>\r\n          <Modal\r\n            title=\"Weight control\"\r\n            visible={this.state.adjustModal}\r\n            onCancel={this.handleAdjustModalChange}\r\n            footer={[\r\n              <Button\r\n                key=\"weight-control-confirm\"\r\n                type=\"primary\"\r\n                onClick={this.handleAdjustModalChange}\r\n              >\r\n                CONFIRM\r\n              </Button>,\r\n            ]}\r\n          >\r\n            <p>You can change the condition of recommendation with slider</p>\r\n            <div className=\"weight-control-slider\">\r\n              <p className=\"weight-slider-title\">Mood</p>\r\n              <p className=\"weight-slider-description\">\r\n                How much the mood affect the recommendation\r\n              </p>\r\n              <Radio.Group\r\n                className=\"weight-options\"\r\n                defaultValue={this.state.moodWeight}\r\n                onChange={this.onChangeMood}\r\n                buttonStyle=\"solid\"\r\n              >\r\n                <Radio.Button value=\"small\">No affect</Radio.Button>\r\n                <Radio.Button value=\"mid\">Moderate</Radio.Button>\r\n                <Radio.Button value=\"large\">Large affect</Radio.Button>\r\n              </Radio.Group>\r\n            </div>\r\n            <div className=\"weight-control-slider\">\r\n              <p className=\"weight-slider-title\">Pitch</p>\r\n              <p className=\"weight-slider-description\">\r\n                How much the pitch affect the recommendation\r\n              </p>\r\n              <Radio.Group\r\n                className=\"weight-options\"\r\n                defaultValue={this.state.pitchWeight}\r\n                onChange={this.onChangePitch}\r\n                buttonStyle=\"solid\"\r\n              >\r\n                <Radio.Button value=\"small\">No affect</Radio.Button>\r\n                <Radio.Button value=\"mid\">Moderate</Radio.Button>\r\n                <Radio.Button value=\"large\">Large affect</Radio.Button>\r\n              </Radio.Group>\r\n            </div>\r\n            <div className=\"weight-control-slider\">\r\n              <p className=\"weight-slider-title\">Song Preference</p>\r\n              <p className=\"weight-slider-description\">\r\n                How much your like history affect the recommendation\r\n              </p>\r\n              <Radio.Group\r\n                className=\"weight-options\"\r\n                defaultValue={this.state.songPrefWeight}\r\n                onChange={this.onChangeSongPref}\r\n                buttonStyle=\"solid\"\r\n              >\r\n                <Radio.Button value=\"small\">No affect</Radio.Button>\r\n                <Radio.Button value=\"mid\">Moderate</Radio.Button>\r\n                <Radio.Button value=\"large\">Large affect</Radio.Button>\r\n              </Radio.Group>\r\n            </div>\r\n          </Modal>\r\n          <Modal\r\n            title=\"Score of this song\"\r\n            visible={this.state.explainModal}\r\n            onCancel={this.handleExplainModalChange}\r\n            footer={[\r\n              <Button\r\n                key=\"weight-control-confirm\"\r\n                type=\"primary\"\r\n                onClick={this.handleExplainModalChange}\r\n              >\r\n                OK\r\n              </Button>,\r\n            ]}\r\n          >\r\n            <div className=\"song-score-info\">\r\n              <div className=\"pitch-score-div\">\r\n                <p className=\"score-title\">Pitch</p>\r\n                <div>\r\n                  <Tag color=\"#6200ee\">Easy</Tag>\r\n                  <Tag>Normal</Tag>\r\n                  <Tag>Hard</Tag>\r\n                </div>\r\n              </div>\r\n              <div className=\"mood-score-div\">\r\n                <p className=\"score-title\">Mood</p>\r\n                <div>\r\n                  This song is <strong>99%</strong> {this.state.mood}\r\n                </div>\r\n              </div>\r\n              <div className=\"song-score-div\">\r\n                <p className=\"score-title\">Preference</p>\r\n                <div className=\"pref-score\">\r\n                  <p>\r\n                    <strong>99% of users</strong> who have <br />\r\n                    similar tastes like this song\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </Content>\r\n        <VocaliFooter />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Result);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Button, Skeleton, Card, Avatar } from \"antd\";\r\n\r\nimport \"./css/home.css\";\r\nimport \"./css/list.css\";\r\nimport InfoHeader from \"./InfoHeader.js\";\r\nimport VocaliFooter from \"./Footer.js\";\r\n\r\nconst { Meta } = Card;\r\n\r\nclass LikeList extends React.Component {\r\n  nextPath(path) {\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  state = {\r\n    songList: [\r\n      {\r\n        id: \"x1yk42m_99d\",\r\n        title: \"문어의 꿈\",\r\n        artist: \"안예은\",\r\n        publishedYear: 2021,\r\n        genre: \"Dance\",\r\n        mood: \"happy\",\r\n        pitch: \"A#\",\r\n        songNum: 48394,\r\n      },\r\n      {\r\n        id: \"1hOEq5q9L41E2YbLhVvW5x\",\r\n        title: '아로하(드라마 \"슬기로운 의사 생활\")',\r\n        artist: \"조정석\",\r\n        publishedYear: 2020,\r\n        genre: \"Ballad\",\r\n        mood: \"energetic\",\r\n        pitch: \"A#\",\r\n        songNum: 27615,\r\n      },\r\n    ],\r\n    feedbacks: new Map(),\r\n    loading: false,\r\n    modal: false,\r\n    drawer: false,\r\n    selectedFeedback: \"\",\r\n  };\r\n\r\n  handleSelectedFeedback(tag, checked, songid) {\r\n    if (checked) {\r\n      this.setState({ feedbacks: this.state.feedbacks.set(songid, tag) });\r\n    }\r\n    console.log(this.state.feedbacks);\r\n  }\r\n\r\n  handleDelete(songid) {\r\n    this.setState({\r\n      songList: this.state.songList.filter((song) => song.id !== songid),\r\n    });\r\n    // TODO: API connection\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <InfoHeader />\r\n        <div className=\"like-list-div\">\r\n          {this.state.songList.map((song) => (\r\n            <Card\r\n              className=\"like-list\"\r\n              title={`Song No. ${song.songNum}`}\r\n              extra={\r\n                <Button type=\"link\" onClick={() => this.handleDelete(song.id)}>\r\n                  Delete\r\n                </Button>\r\n              }\r\n            >\r\n              <Skeleton loading={loading} avatar active>\r\n                <Meta\r\n                  avatar={\r\n                    <Avatar\r\n                      style={{\r\n                        color: \"#000000\",\r\n                        backgroundColor: \"#D9D9D9\",\r\n                      }}\r\n                    >\r\n                      {song.pitch}\r\n                    </Avatar>\r\n                  }\r\n                  title={song.title}\r\n                  description={song.artist}\r\n                />\r\n              </Skeleton>\r\n            </Card>\r\n          ))}\r\n          <div style={{ height: \"20px\" }} />\r\n        </div>\r\n        <VocaliFooter />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(LikeList);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Start from \"./Start\";\r\nimport InfoSet from \"./InfoSet\";\r\nimport SongPref from \"./SongPref\";\r\nimport Pitch from \"./PitchDetect\";\r\nimport Home from \"./Home\";\r\nimport Result from \"./Result\";\r\n// import Weight from \"./Weight\";\r\nimport LikeList from \"./List\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Start} />\r\n          <Route exact path=\"/home\" component={Home} />\r\n          <Route path=\"/info\" component={InfoSet} />\r\n          <Route path=\"/songpref\" component={SongPref} />\r\n          <Route path=\"/pitch\" component={Pitch} />\r\n          <Route path=\"/result\" component={Result} />\r\n          {/* <Route path=\"/weight\" component={Weight} /> */}\r\n          <Route path=\"/likelist\" component={LikeList} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}